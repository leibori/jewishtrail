{"version":3,"sources":["components/firebase/firebase.js","components/search/SearchUtils.js","components/map/MapUtilities.js","components/main-menu/Menu.js","components/admin/AdminMenu.js","components/firebase/FirebaseLoginUtils.js","components/login/LoginPage.js","components/login/SignUp.js","components/sites/siteComponent.js","components/search/SiteSearch.js","components/admin/UpdateSite.js","components/firebase/FirebaseUtilities.js","components/admin/CreateSite.js","components/admin/DeleteSite.js","components/admin/AdminPage.js","components/admin/AuthMenu.js","components/road/RoadComponent.js","components/search/GeneralSearch.js","components/search/SearchMenu.js","components/main-menu/about.js","components/layout/Navbar.js","components/login/LogOut.js","components/login/Home.js","components/favorites/siteHandle.js","components/favorites/Favorites.js","components/sites/SitePage.js","components/road/RoadForm.js","components/sites/UpdateForm.js","components/search/RoadSearch.js","components/search/RoadMenu.js","components/road/roadPage.js","components/road/DeleteRoad.js","App.js","registerServiceWorker.js","serviceWorker.js","index.js"],"names":["myFirebase","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","myDatabase","firestore","myFunctions","functions","findPerCollection","searchVals","accuracy","collection","a","results","get","forEach","doc","counter","searchTokens","data","value","includes","push","document","type","findFromDB","collectionName","Math","ceil","length","sortedResults","i","toLowerCase","concat","_","sortBy","reverse","site","name","city","country","tags","id","findSitesByCountryForMarker","siteList","where","docs","address","partialInfo","latitude","longitude","getRoadByID","mapUrl","mbAttr","myIcon","L","icon","iconUrl","iconSize","iconAnchor","popupAnchor","getMenuMap","mapId","zoom","markers","sites","layerGroup","marker","addTo","link","bindPopup","getSiteMarkerLayer","streets","tileLayer","maxZoom","minZoom","tileSize","zoomOffset","attribution","satellite","satelliteStreets","map","center","zoomControl","layers","baseLayers","overlays","control","Menu","state","location","lat","lng","haveUsersLocation","navigator","geolocation","getCurrentPosition","position","fetch","then","res","json","setState","country_name","coords","console","log","this","style","height","width","left","top","transform","Component","AdminMenu","action","activeAction","e","target","className","marginLeft","to","signInWithGoogle","provider","firebase","GoogleAuthProvider","setPersistence","Auth","Persistence","SESSION","signInWithPopup","user","auth","currentUser","isUserExists","uid","displayName","CreateNewAccount","u","exists","email","password","user_name","preventDefault","createUserWithEmailAndPassword","catch","error","UserName","set","favorites","LoginPage","googleLogin","userid","online","onChange","onSignUpClick","props","history","bind","onChnage","onAuthStateChanged","md","onClick","fab","onSubmit","signInWithEmailAndPassword","login","required","htmlFor","margin","gradient","rounded","borderRadius","align","SignUp","onSignup","username","signup","handleChange","SiteComponent","info_url","tag","key","SiteSearchPrototype","buttonName","onClickMethod","canRenderButton","searchVal","returnTo","haveSearched","split","onSearchButtonClicked","updateSearchValue","window","href","result","executeSearch","ref","form","list","itemsPerPage","renderList","ChangeSite","onSiteButtonClick","match","params","chosenSite","changingFlag","updateTopDownhValue","topDownValue","alert","SiteSearch","createNewSite","add","adress","externalSourceUrl","imageUrl","fullInfo","UpdateSite","update","DeleteSiteFromDB","delete","getUserClaims","userClaims","getIdTokenResult","tokenResult","admin","claims","getFavoritesIDs","getRoadFavoritesIDs","RoadsFavorites","getFavorites","resultOfSite","siteFromFireStore","getData","updateUserFavorites","newFavorites","getSiteByID","siteid","createNewRoad","siteListID","roadName","roadDescription","CityList","CountryList","TagList","description","updateUserRoadsFavorites","deleteRoadFromDB","road","CreateSite","addToken","deleteTag","index","splice","handleSubmit","Name","Array","from","Set","parseFloat","token","handleChangeTokens","color","DeleteSite","sid","myRef","current","find","s","indexOf","React","createRef","AdminPage","deleteUser","httpsCallable","deleteUserByEmails","message","createAdmin","addAdminRole","placeholder","RoadComponent","join","GeneralSearch","siteFilterClicked","roadFilter","siteFilter","roadFilterClicked","resultsFilter","onRoadClickMethod","onSiteClickMethod","canRenderButtonSite","canRenderButtonRoad","searchResult","siteColorPredicate","roadColorPredicate","backgroundColor","filter","SearchMenu","claim","siteFavoriteList","roadFavoriteList","addSiteToFavorites","addRoadToFavorites","h1Style","display","fontWEIGHT","buttonStyle","padding","border","textAlight","About","src","alt","srcSet","sizes","frameBorder","allowFullScreen","Navbar","isLoggedIn","isAdmin","collapseOnSelect","expand","bg","variant","Brand","Toggle","aria-controls","Collapse","Link","Home","signOut","logout","siteHandle","deleteSite","Favorites","favoritesArr","deleteFromFirebase","uidList","SitePage","site_id","all_site_props","marginDown","Map","TileLayer","url","Marker","Popup","RoadForm","renderButton","addSiteToRoadList","siteID","siteData","siteObject","siteListResult","createNewRoadSubmit","tagsArr","removeSite","UpdateForm","isLoaded","RoadSearch","favoriteList","RoadMenu","addRoadsToFavorites","RaodPage","roadId","Promise","all","DeleteRoad","roadList","App","authListener","localStorage","setItem","removeItem","forceRefresh","rel","exact","path","component","LogOut","AuthMenu","Boolean","hostname","isLocalhost","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","getElementById","URL","process","origin","addEventListener","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f24a3924.chunk.js","sourcesContent":["import  app from 'firebase/app';\r\nimport \"firebase/auth\"\r\nimport \"firebase/firebase-firestore\"\r\nimport \"firebase/functions\"\r\n\r\nvar config = {\r\n    apiKey: \"AIzaSyDxnwrW4yBF4d0QDXoFSCF9FBNDauq68gE\",\r\n    authDomain: \"jewish-trail.firebaseapp.com\",\r\n    databaseURL: \"https://jewish-trail.firebaseio.com\",\r\n    projectId: \"jewish-trail\",\r\n    storageBucket: \"jewish-trail.appspot.com\",\r\n    messagingSenderId: \"1060927552672\",\r\n    appId: \"1:1060927552672:web:7288a483d83a16b7da9dc5\",\r\n    measurementId: \"G-D4K9DSRZ0K\"\r\n};\r\n\r\nexport const myFirebase = app.initializeApp(config);\r\nexport const myDatabase = myFirebase.firestore();\r\nexport const myFunctions = myFirebase.functions()\r\n\r\n\r\n\r\n// export default class Firebase{\r\n\r\n//     // static sharedInstance = Firebase.sharedInstance == null ? new Firebase() : Firebase.sharedInstance\r\n\r\n//     static instance = null;\r\n//     static createInstance() {\r\n//         var object = new Firebase();\r\n//         return object;\r\n//     }\r\n//     static getInstance () {\r\n//         if (!Firebase.instance) {\r\n//             Firebase.instance = Firebase.createInstance();\r\n//         }\r\n//         return Firebase.instance;\r\n//     }\r\n\r\n//     constructor(){\r\n//         app.initializeApp(config)\r\n//         this.auth = app.auth()\r\n//         this.db = app.firestore()\r\n//         this.user = null\r\n//         this.startStateListiner()\r\n//         console.log(\"in constructor\")\r\n//         console.log(\"val = \" + this.user)    \r\n//     }\r\n\r\n//     // declare functions here \r\n//     loginWithGoogle() {\r\n//         const provider = this.auth.GoogleAuthProvider();\r\n//         return this.auth().signInWithPopup(provider).then(result =>{\r\n//             const user = result.user;\r\n//             console.log(user.email);\r\n//         })\r\n//     }\r\n\r\n//     async register(email,password){\r\n//         await this.auth.createUserWithEmailAndPassword(email,password)\r\n//         return this.auth.currentUser\r\n//     }\r\n//     login(email,password){\r\n//         this.auth.signInWithEmailAndPassword(email,password)\r\n//         this.user = this.auth.currentUser.uid\r\n//     }\r\n\r\n//     async getUserClaims(){\r\n//         return this.user\r\n//     }\r\n\r\n//     // async statusListener(){\r\n//     //     this.auth.onAuthStateChanged(user => {\r\n//     //         user.getIdTokenResult().then(idTokenResult => {\r\n//     //             user.admin = idTokenResult.claims.admin;\r\n//     //             console.log(\"Is the user and admin?\" + user.admin);\r\n//     //         });\r\n//     //     })\r\n//     // }\r\n\r\n//     startStateListiner() {\r\n//         this.auth.onAuthStateChanged(user => {\r\n//             if(user) {\r\n//                 this.user = user.uid\r\n//             } else {\r\n//                 this.user = \"offline\"\r\n//             }\r\n//             // user.getIdTokenResult().then(idTokenResult => {\r\n//             //     user.admin = idTokenResult.claims.admin;\r\n//             //     console.log(\"Is the user and admin?\" + user.admin);\r\n//             // });\r\n//         })\r\n//     }\r\n// }\r\n\r\n// // export default new Firebase()","import {myDatabase} from '../firebase/firebase'\r\nimport _ from 'underscore'\r\n\r\n\r\n/**\r\n * This function recieves a string array \"searchVal\" and uses it to search through a database collection for the sites that has similar search tokens.\r\n * It returns a array that contains the documents that passed the \"accuracy\" value given.\r\n * @param {string[]} searchVals \r\n * @param {double} accuracy \r\n * @param {string} collection \r\n */\r\nasync function findPerCollection(searchVals, accuracy, collection) {\r\n\r\n    // Array of result and their counter by number of matches.\r\n    let results = []\r\n\r\n    // Gets the snapshot of all the results in the database by collection.\r\n    const snapshot = await myDatabase.collection(collection).get()\r\n\r\n    // Exectues for each document in snapshot.\r\n    snapshot.forEach(doc => {\r\n\r\n        // A counter for the number of matches.\r\n        var counter = 0\r\n\r\n        // Pulls the result's search tokens\r\n        var searchTokens = doc.data().searchTokens;\r\n\r\n        // Counts the number of matches.\r\n        searchVals.forEach(value => {\r\n            if(searchTokens.includes(value)) {\r\n                ++counter\r\n            }\r\n        })\r\n\r\n        // Push result and counter to \"results\" array if the counter is greater or equal to the accuracy variable.\r\n        if (counter >= accuracy) {\r\n            results.push({counter: counter, document: doc, type: collection })\r\n        }\r\n\r\n    })\r\n\r\n    return results\r\n}\r\n\r\n\r\n/**\r\n * This function recieves a string array \"searchVal\" and uses it to searche through the database collections for documents that has similar search tokens.\r\n * It returns a array of objects that contains the neccessary info for a search result.\r\n * The returned array is sorted by number of matches between \"searchVal\" and search tokens in each site.\r\n * @param {string[]} searchVals \r\n * @param {string[]} collectionName \r\n */\r\nexport async function findFromDB(searchVals, collectionName) {\r\n\r\n    // Sets the accuracy to just above 50%. meaning the number of matches need to be atleast half of the words in \"searchVal\".\r\n    let accuracy = Math.ceil(searchVals.length / 2.0)\r\n\r\n    // Array of sites and their counter by number of matches.\r\n    let results = []\r\n\r\n    // The returned array at the end.\r\n    var sortedResults = []\r\n\r\n    // Convert all of the search values to lower case for case insensitive search.\r\n    for(var i = 0; i < searchVals.length; ++i) {\r\n        searchVals[i] = searchVals[i].toLowerCase();\r\n    }\r\n\r\n    // Goes through each collection that has it's name in \"collectionName\".\r\n    for(var i = 0; i < collectionName.length; ++i) {\r\n        results = results.concat(await findPerCollection(searchVals, accuracy, collectionName[i]))\r\n    }\r\n    \r\n    // Returns early if search result is empty.\r\n    if (results.length == 0) {\r\n        return sortedResults\r\n    }\r\n\r\n    // Sorts the \"results\" array in a decending order by the counter.\r\n    results = _.sortBy(results, 'counter').reverse()\r\n\r\n    // Takes the sites from the \"sites\" array and push it to the \"sortedResults\" array.\r\n    results.forEach(site => {\r\n        sortedResults.push({\r\n            name: site.document.data().name,\r\n            city: site.document.data().city,\r\n            country: site.document.data().country,\r\n            tags: site.document.data().tags,\r\n            id: site.document.id,\r\n            type: site.type\r\n        })\r\n    })\r\n\r\n    return sortedResults;\r\n}\r\n\r\n\r\n/**\r\n * This function recieves a string \"country\" and uses it to searche through the \"sites\" database for the sites that are in the same country as the string \"country\"\r\n * It returns a array of site-like objects that contains the neccessary info for a marker.\r\n * @param {string} country \r\n */\r\nexport async function findSitesByCountryForMarker(country) {\r\n    var siteList = []\r\n    const snapshot = await myDatabase.collection('sites').where(\"country\", '==', country).get()\r\n    snapshot.docs.forEach(doc => {\r\n        var data = doc.data()\r\n        siteList.push({ id: doc.id,\r\n                        name: data.name,\r\n                        address: data.address,\r\n                        partialInfo: data.partialInfo,\r\n                        latitude: data.latitude,\r\n                        longitude: data.longitude\r\n                        })\r\n    })\r\n    return siteList\r\n}\r\n\r\n\r\n/**\r\n * This function recieves a string \"name\" and uses it to searche through the \"roads\" database for the roads that has the same name as the string \"name\"\r\n * It returns a array of roads.\r\n * @param {string} name \r\n */\r\nexport async function getRoadByName(name){\r\n\r\n    const NameField = \"roadName\";\r\n\r\n    // The returned array at the end.\r\n    let roadList = [];\r\n\r\n    // Gets the snapshot of all the roads in the database that as the same name as the \"name\" variable.\r\n    const snapshot = await myDatabase.collection('roads').where(NameField, '==', name).get()\r\n\r\n    // Pushes the roads found to the \"roadList\" array.\r\n    snapshot.docs.forEach(doc => {\r\n        roadList.push(doc.data())\r\n    })\r\n\r\n    // console.log(roadList)\r\n    return roadList;\r\n}\r\n\r\n\r\n/**\r\n * This function recieves a string \"id\" and uses it to searche through the \"roads\" database for the road that has the same id as the string \"id\"\r\n * It returns a road.\r\n * @param {string} id \r\n */\r\nexport async function getRoadByID(id){\r\n    return (await myDatabase.collection('roads').doc(id).get()).data()\r\n}","import L from 'leaflet';\n\n\nlet maxZoom = 18\nlet minZoom = 1.5\n\nlet iconUrl = 'http://www.clker.com/cliparts/k/a/2/B/c/u/map-marker-red-th.png'\nlet mapUrl = 'https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw'\nlet mbAttr = 'Map data © OpenStreetMap contributors, ' + 'CC-BY-SA, ' + 'Imagery © Mapbox'\n\n\nexport var myIcon = L.icon({\n    iconUrl: iconUrl,\n    iconSize: [24.8, 39.6],\n    iconAnchor: [12.4, 39.6],\n    popupAnchor: [0, -30]\n});\n\n\nfunction getSiteMarkerLayer(markers) {\n    var sites = L.layerGroup();\n    markers.forEach(site => {\n        var marker = L.marker([site.latitude, site.longitude], {icon: myIcon}).addTo(sites)\n        var link = \"<a href='/site/\" + site.id + \"'>More info</a>\"\n        marker.bindPopup(\"<b>\"+site.name+\"</b><br/>\"+\n                        site.address+\"<br/>\"+\n                        site.partialInfo+\"<br/>\"+\n                        link)\n    })\n    return sites\n}\n\n\nexport function getMenuMap(mapId, latitude, longitude, zoom, markers) {\n    var sites = getSiteMarkerLayer(markers)\n\n    var streets = L.tileLayer(mapUrl, {id: 'mapbox/streets-v11', maxZoom: maxZoom,\n        minZoom: minZoom, tileSize: 512, zoomOffset: -1, attribution: mbAttr});\n    var satellite = L.tileLayer(mapUrl, {id: 'mapbox/satellite-v9', maxZoom: maxZoom,\n        minZoom: minZoom, tileSize: 512, zoomOffset: -1, attribution: mbAttr});\n    var satelliteStreets = L.tileLayer(mapUrl, {id: 'mapbox/satellite-streets-v11', maxZoom: maxZoom,\n        minZoom: minZoom, tileSize: 512, zoomOffset: -1, attribution: mbAttr});\n\n    var map = L.map(mapId, {\n        center: [latitude, longitude],\n        zoom: zoom,\n        zoomControl: false,\n        layers: [streets, sites] \n    })\n\n    var baseLayers = {\n            \"Streets\": streets,\n            \"Sattelite\": satellite,\n            \"Sattelite and streets\": satelliteStreets };\n    var overlays = { \"Sites\": sites };\n    L.control.layers(baseLayers, overlays).addTo(map);\n}","import React, { Component } from 'react'\nimport { findSitesByCountryForMarker } from '../search/SearchUtils'\nimport { getMenuMap } from '../map/MapUtilities'\n\nimport L, { icon } from 'leaflet';\n\n\nclass Menu extends Component {\n\n    state = {\n        location: {\n            lat: 41.294856,\n            lng: -4.055685,\n        },\n        zoom: 5,\n        country: \"\",\n        haveUsersLocation: false,\n        markers: []\n    }\n\n    async componentWillMount(){\n\n        // Set center of the map to be the user's current location.\n        navigator.geolocation.getCurrentPosition((position) => {\n            fetch('https://ipapi.co/json')\n            .then(res => res.json())\n            .then(location => {\n                this.setState({\n                    country: location.country_name\n                })\n            })\n            this.setState({\n                location: {\n                    lat: position.coords.latitude,\n                    lng: position.coords.longitude},\n                    haveUsersLocation: true,\n                    zoom: 13\n            })\n        }, () => {\n            console.log('access denied')\n            fetch('https://ipapi.co/json')\n            .then(res => res.json())\n            .then(location => {\n                console.log(location)\n                this.setState({\n                    location: {\n                        lat: location.latitude,\n                        lng: location.longitude},\n                    country: location.country_name,\n                    haveUsersLocation: true,\n                    zoom: 13})\n            })\n        })\n         \n        // var markers = await findSitesByCountryForMarker(this.state.country)\n        var markers = await findSitesByCountryForMarker(\"Spain\")\n        // console.log(markers)\n        this.setState({ markers: markers })\n\n        getMenuMap('map', this.state.location.lat, this.state.location.lng, this.state.zoom, markers)\n    }\n\n\n    render() {\n        return(\n                <div>\n                    <p>Welcome to the \"Jewish Trail\" project.</p>\n                    <p>Our goal is to strenghen the bond between the jewish people around the world by improving access to our shared history and heritage.</p>\n                    <p>Feel free to go on a journey and rediscover the marks the we left on the world and in the history books.</p>\n                    <div style={{height: '400px', width: '90%', position: \"absolute\", left: '50%', top: '50%', transform: 'translate(-50%, -10%)'}} id='map' />\n                </div>\n        )\n    }\n}\n\nexport default Menu","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nclass AdminMenu extends Component {\n  state = {\n    action: ''\n  }\n  activeAction = (e) => {\n    this.setState({\n      action: e.target.id\n      \n    })\n  }\n  //<button id='create' onClick={this.activeAction}>Create new Site</button>\n  //<button id='delete' onClick={this.activeAction}>Delete Site</button>\n  //<button id='change' onClick={this.activeAction}>Change Site</button>\n\n  render() {\n    return (\n    <div className=\"container\">\n      <h5 className=\"black-text text-darken-3\" style={{marginLeft:\"-210px\"}}>Welcome to Site Management. choose an Option:</h5>\n      <button className=\"btn pink lighten-1\" id='create'><Link to=\"/createSite\" className=\"white-text\">Create new Site</Link></button>\n      <button className=\"btn pink lighten-1\" style={{marginLeft:\"30px\"}} id='delete'><Link className=\"white-text\" to=\"/deleteSite\">Delete Site</Link></button>\n      <button className=\"btn pink lighten-1\" style={{marginLeft:\"30px\"}} id='change'><Link className=\"white-text\" to=\"/updateSite\">Update Site</Link></button>\n    </div>\n    )    \n  }\n}\n\nexport default AdminMenu","import * as firebase from 'firebase'\nimport { myFirebase, myDatabase } from './firebase'\n\nexport async function signInWithGoogle() {\n  var provider = new firebase.auth.GoogleAuthProvider();\n  await firebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION)\n  await firebase.auth().signInWithPopup(provider)\n  // add createNewAccout\n  var user = myFirebase.auth().currentUser;\n  if(await isUserExists(user.uid)){\n    return user.uid\n  }\n  var displayName = user.displayName;\n  CreateNewAccount(user.uid, displayName).then((u)=>(console.log(u)));\n  return user.uid\n}\n\nasync function isUserExists(uid){\n  const user = await myDatabase.collection('accounts').doc(uid).get()\n  if(user.exists){\n    return true;\n  }\n  return false;\n}\n\nexport function login(e, email, password) {\n    e.preventDefault();\n    myFirebase.auth().signInWithEmailAndPassword(email, password).then((u)=>{\n      console.log(\"logged in\" + myFirebase.auth().currentUser)\n    }).catch((error) => {\n        console.log(error);\n      });\n}\n\nexport async function signup(e, email, password, user_name){\n  e.preventDefault();\n  myFirebase.auth().createUserWithEmailAndPassword(email, password).then((u)=>{\n    CreateNewAccount(u.user.uid, user_name)\n  }).then((u)=>{console.log(u)})\n  .catch((error) => {\n      console.log(error);\n  })\n}\n\nasync function CreateNewAccount(uid, UserName){\n  console.log(uid)\n  await myDatabase.collection(\"accounts\").doc(uid).set({\n      user_name: UserName,\n      favorites: []\n  })\n}","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport {myFirebase} from '../firebase/firebase';\nimport { signInWithGoogle, login } from '../firebase/FirebaseLoginUtils'\nimport { MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody, MDBInput, MDBBtn, MDBIcon, MDBModalFooter } from 'mdbreact';\n\nconst centerStyle = {\n    margin: 'auto',\n    width: '50%',\n}\n\nexport default class LoginPage extends Component {\n  constructor() {\n    super();\n //   this.signup = this.signup.bind(this);\n    this.state = {\n      email: '',\n      password: '',\n      online: false,\n      uid: '',\n    };\n    this.googleLogin = this.googleLogin.bind(this);\n    this.onChnage = this.onChange.bind(this);\n    this.onSignUpClick = this.onSignUpClick.bind(this);\n  }\n\n  googleLogin = async (e) => {\n    e.preventDefault();\n    var userid = await signInWithGoogle()\n    console.log(userid)\n    this.setState({\n      online: true,\n      uid: userid\n    })\n  }\n\n  async componentDidMount(){\n    myFirebase.auth().onAuthStateChanged(async (user) => {\n      if(user){\n        this.setState({online: true})\n      }else{\n        this.setState({online: false})\n      }  \n     })\n  }\n  \n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSignUpClick = (e) => {\n    e.preventDefault();\n    this.props.history.push('/SignUp');\n  }\n  render() {\n    if(this.state.online){\n      return <Redirect to = \"/Menu\"></Redirect>\n    }\n    const { email, password } = this.state;\n    return (\n        <MDBContainer>\n            <MDBRow className=\"mt-2 mb-3 d-flex justify-content-center\">\n                <MDBCol md=\"4\">\n                    <MDBCard>\n                        <div className=\"header pt-3 blue-gradient\">\n                            <MDBRow className=\"d-flex justify-content-center\">\n                                <h1 className=\"white-text mb-3 pt-3 font-weight-bold\">\n                                Log in\n                                </h1>\n                            </MDBRow>\n                            <MDBRow className=\"mt-2 mb-3 d-flex justify-content-center\">\n                                <a onClick={this.googleLogin} className=\"fa-lg p-2 m-2 gplus-ic\">\n                                    <MDBIcon fab icon=\"fa-google-plus-g\" className=\"fa-google-plus-g white-text fa-lg\" />\n                                </a>\n                            </MDBRow>\n                        </div>\n                        <MDBCardBody className=\"mx-4\">\n                          <form onSubmit={(e)=> login(e, email, password)}>         \n                            <div className=\"md-form mt-3\">\n                              <i className=\"fa fas-envelope prefix grey-text\"></i>\n                              <input required name=\"email\" onChange={this.onChange} type=\"email\" id=\"materialSubscriptionFormPasswords\" className=\"form-control\"/>\n                              <label htmlFor=\"materialSubscriptionFormPasswords\"> Email...</label>\n                            </div>\n                            <div className=\"md-form mt-3\">\n                              <i className=\"fa fa-lock prefix grey-text\"></i>\n                              <input required type=\"password\" name=\"password\" onChange={this.onChange} id=\"materialSubscriptionFormPasswords\" className=\"form-control\"/>\n                              <label htmlFor=\"materialSubscriptionFormPasswords\">Password...</label>\n                            </div> \n                            <div style={{margin: 'auto'}} className=\"text-center mb-3\">\n                                <MDBBtn\n                                    type=\"submit\"\n                                    gradient=\"blue\"\n                                    rounded\n                                    className=\"z-depth-1a\"\n                                    style={{borderRadius: '18px',}}\n                                >\n                                    LOGIN\n                                </MDBBtn>\n                            </div>\n                          </form>\n                        </MDBCardBody>\n                        <MDBModalFooter className=\"mx-auto pt-3 mb-1 justify-content-center\">\n                            <p align='center' className=\"font-small grey-text d-flex\">\n                            Not a member?\n                            <a onClick={this.onSignUpClick} className=\"blue-text ml-1\">\n                              Sign Up\n                            </a>\n                             Or\n                            <a onClick={(e) => this.props.history.push('/Menu')} className=\"blue-text ml-1\">\n                                Enter as a guest\n                              </a>\n                            </p>\n                        </MDBModalFooter>\n                    </MDBCard>\n                </MDBCol>\n            </MDBRow>\n        </MDBContainer>\n    );}\n}\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport  {myFirebase} from '../firebase/firebase';\nimport {signup, signInWithGoogle} from '../firebase/FirebaseLoginUtils'\nimport { MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody, MDBInput, MDBBtn, MDBIcon, MDBModalFooter } from 'mdbreact';\n\nconst centerStyle = {\n  margin: 'auto',\n  width: '50%',\n}\n\nclass SignUp extends Component {\n  constructor() {\n    super();\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      online: '',\n      email: '',\n      password: '',\n      username:'',\n    };\n    this.onSignup = this.onSignup.bind(this);\n    this.handleChange = this.handleChange.bind();\n    this.googleLogin = this.googleLogin.bind(this);\n\n  }\n\n  googleLogin = async (e) => {\n    e.preventDefault();\n    var userid = await signInWithGoogle()\n    console.log(userid)\n    this.setState({\n      online: true,\n      uid: userid\n    })\n  }\n\n\n  async componentDidMount(){\n    myFirebase.auth().onAuthStateChanged(async (user) => {\n      if(user){\n        this.setState({online: true})\n      }else{\n        this.setState({online: false})\n      }\n      \n   })\n }\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSignup = (e) => {\n    const { email, password, username } = this.state;\n    e.preventDefault();\n    signup(e, email, password, username);\n    this.props.history.push('/Menu');\n  }\n  render() {\n    if(this.state.online){\n      return <Redirect to = \"/Menu\"></Redirect>\n    }\n    const { email, password, username } = this.state;\n    return (\n        <MDBContainer>\n            <MDBRow className=\"mt-2 mb-3 d-flex justify-content-center\">\n                <MDBCol md=\"4\">\n                    <MDBCard>\n                        <div className=\"header pt-3 blue-gradient\">\n                            <MDBRow className=\"d-flex justify-content-center\">\n                                <h1 className=\"white-text mb-3 pt-3 font-weight-bold\">\n                                Sign Up\n                                </h1>\n                            </MDBRow>\n                            <MDBRow className=\"mt-2 mb-3 d-flex justify-content-center\">\n                                <a onClick={this.googleLogin} className=\"fa-lg p-2 m-2 gplus-ic\">\n                                    <MDBIcon fab className=\"fa-google-plus-g white-text fa-lg\" />\n                                </a>\n                            </MDBRow>\n                        </div>\n                        <MDBCardBody className=\"mx-4\">\n                        <h3 align='center' className=\"blue-text mb-3 pt-3 font-weight-bold\">\n                                Start your trail today!\n                                </h3>\n                          <form onSubmit={this.onSignup}>\n                            <div className=\"md-form mt-3\">\n                              <i className=\"fa fa-envelope prefix grey-text\"></i>\n                              <input required name=\"email\" onChange={this.handleChange} type=\"email\" id=\"materialSubscriptionFormPasswords\" className=\"form-control\"/>\n                              <label htmlFor=\"materialSubscriptionFormPasswords\"> Email...</label>\n                            </div>\n                            <div className=\"md-form mt-3\">\n                              <i className=\"fa fa-lock prefix grey-text\"></i>\n                              <input required type=\"password\" name=\"password\" onChange={this.handleChange} id=\"materialSubscriptionFormPasswords\" className=\"form-control\"/>\n                              <label htmlFor=\"materialSubscriptionFormPasswords\">Password...</label>\n                            </div> \n                            <div className=\"md-form mt-3\">\n                              <i className=\"fa fa-user prefix grey-text\"></i>\n                              <input required type=\"text\" name=\"username\" onChange={this.handleChange} id=\"materialSubscriptionFormPasswords\" className=\"form-control\"/>\n                              <label htmlFor=\"materialSubscriptionFormPasswords\">Username...</label>\n                            </div>  \n                            <div style={{margin: 'auto'}} className=\"text-center mb-3\">\n                                <MDBBtn\n                                    type=\"submit\"\n                                    gradient=\"blue\"\n                                    rounded\n                                    className=\"z-depth-1a\"\n                                    style={{borderRadius: '18px',}}                                    \n                                >\n                                  Sign up\n                                </MDBBtn>\n                            </div>\n                          </form>\n                        </MDBCardBody>\n                    </MDBCard>\n                </MDBCol>\n            </MDBRow>\n        </MDBContainer>\n    );}\n}\nexport default SignUp;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst SiteComponent = ({props}) => {\r\n  var info_url = '/site/'+props.id\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n    <div className=\"card-content grey-text text-darken-3\">\r\n      <div className=\"site-name \">Site name: {props.name}</div>\r\n      <div className=\"site-city \">City: {props.city}</div>\r\n      <div className=\"site-country \">Country: {props.country}</div>\r\n      {\r\n        <div className=\"container\">\r\n            {props.tags.map((tag, i) => {\r\n               return (<span key = {i}> {tag} </span>) \r\n            })}\r\n        </div>  \r\n      }\r\n      <Link to={info_url}>More info</Link>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default SiteComponent","import React, { Component } from 'react'\nimport {findFromDB} from './SearchUtils'\nimport SiteComponent from '../sites/siteComponent'\nimport { PaginatedList } from 'react-paginated-list'\n\n\n/**\n * This component is holds the all of th elements of a search page and calls functions that execute searches.\n */\nclass SiteSearchPrototype extends Component {\n\n    // A constructor that sets the values of this component's state.\n    constructor(props) {\n        super(props);\n\n        // Extracting the props that the constructor recieves.\n        const { buttonName, onClickMethod, canRenderButton, searchVal, returnTo } = props;\n\n        this.state = {\n            // Is true if a search value is sent, and false otherwise.\n            haveSearched: false,\n\n            // The search value as array of strings.\n            searchVal: searchVal ? searchVal.split(' ') : [],\n\n            // The array of search results.\n            siteList: [],\n\n            // Button content next to each entry\n            buttonName,\n\n            // The beginning of the address that is set after the search button is pressed.\n            returnTo: returnTo\n        }\n\n        // onClick event handler for an entry button.\n        this.onClickMethod = onClickMethod ? onClickMethod.bind(this) : null;\n\n        // Boolean function for conditional button rendering.\n        this.canRenderButton = canRenderButton ? canRenderButton.bind(this) : null;\n\n        this.onSearchButtonClicked = this.onSearchButtonClicked.bind(this);\n        this.updateSearchValue = this.updateSearchValue.bind(this);\n\n        // console.log(this.state.searchVal)\n\n        // // Execute the search if the componenet recieved a search value.\n        // if(this.state.searchVal.length >= 1) {\n        //     this.executeSearch()\n        // }\n    };\n\n    // transition to a new page based on the \"returnTo\" and the search value.\n    onSearchButtonClicked(e) {\n        e.preventDefault();\n\n        console.log(this.state.searchVal)\n\n        window.location.href = '/' + this.state.returnTo + '/' + this.state.searchVal\n    }\n\n\n    // The search function that calls for searches in the database.\n    async executeSearch() {\n        const result = await findFromDB(this.state.searchVal, ['sites'])\n        // console.log(result)\n        this.setState({siteList: result,\n                        haveSearched: true})\n    }\n\n\n    // Updates the value of \"searchVal\" based on the content of the input box.\n    updateSearchValue(e) {\n        // console.log(e.target.value)\n        this.setState({searchVal: e.target.value})\n    }\n\n    async componentWillMount() {\n        // Execute the search if the componenet recieved a search value.\n        if(this.state.searchVal.length >= 1) {\n            await this.executeSearch()\n        }\n    }\n\n\n    // Renders the component.\n    render() {\n\n        // Extract \"buttonName\" and \"siteList\" variable for ease of use.\n        const { buttonName, siteList } = this.state;\n\n        // Creates a variable that holds the mapping of \"SiteComponent\" for paging later on.\n        const mapping = (list) => list.map((site, i) => {\n            return (<div key={i} >\n                        <SiteComponent key={i} props={site}/>\n                        {this.onClickMethod && buttonName && this.canRenderButton(site.id) &&\n                            <button onClick={(e) => this.onClickMethod(e, site.id)}>{buttonName}</button>}\n                    </div>)\n        });      \n\n        return (\n            <div>\n                {/* Search site form */}\n                <form ref={this.form} id=\"search-form\">\n                    <div className=\"search-field\">\n                        <input ref={this.searchVal} onChange={this.updateSearchValue} type=\"text\" required />\n                    </div>\n                    <div>\n                        <button onClick={this.onSearchButtonClicked} type=\"submit\">Search</button>\n                    </div>\n                    <p className=\"error pink-text center-align\"></p>\n                </form>\n                \n                {/* Results */}\n                <div className=\"container\">\n                    {siteList.length !== 0 && <PaginatedList\n                        list={siteList}\n                        itemsPerPage={3}\n                        renderList={mapping}/>}\n                </div>\n\n                {\n                    this.state.searchVal.length != 0 && this.state.siteList.length == 0 && this.state.haveSearched ?\n                        (<h5>No matches found.</h5>) : ''\n                }\n            </div>\n        )    \n    }\n}\n\nexport default SiteSearchPrototype","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport {findFromDB} from '../search/SearchUtils'\nimport SiteSearch from '../search/SiteSearch'\n\n\nclass ChangeSite extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        searchVal: props.match.params.searchVal ? props.match.params.searchVal : '',\n        siteList: [],\n        chosenSite: null,\n        changingFlag: false\n    }\n\n    this.onSearchButtonClicked = this.onSearchButtonClicked.bind(this);\n    this.updateSearchValue = this.updateSearchValue.bind(this);\n    this.updateTopDownhValue = this.updateTopDownhValue.bind(this);\n    this.onSiteButtonClick = this.onSiteButtonClick.bind(this);\n};\n\n// async UpdateSite(e,index){\n//   e.preventDefault();\n//   const siteID = this.state.siteList[index].id\n//   //let site = await getSiteByID(siteID);\n//   //site.id = siteID;\n//   //setState({changingFlag: true, chosenSite:site})\n//   this.setState({changingFlag: true, chosenSite:siteID})\n// }\n\n\nasync onSearchButtonClicked(e) {\n    e.preventDefault();\n    const result = await findFromDB(this.state.topDownValue, this.state.searchVal)\n    if(!result.length){\n      alert(\"no Result\")\n    }\n    this.setState({siteList: result})\n}\n\nupdateSearchValue(e) {\n  this.setState({searchVal: e.target.value})\n}\n\n\nonSiteButtonClick = (e, id) => {\n  this.props.history.push(\"/updateForm/\" +id);\n}\n\nupdateTopDownhValue(e) {\n  this.setState({topDownValue: e.value})\n}\n\n\nrender() {\n  // if(this.state.changingFlag){\n  //   return <UpdateForm props={this.state.chosenSite}/>\n  // }\n    return (\n        <div>\n            <h5 className=\"grey-text text-darken-3\">Search Site to Update</h5>\n            <SiteSearch\n              onClickMethod={this.onSiteButtonClick}\n              buttonName={`Update site`}\n              canRenderButton={()=>true}\n              searchVal={this.state.searchVal}\n              returnTo='updateSite'/>\n\n            {/* <form ref={this.form} id=\"search-form\">\n                <div className=\"search-field\">\n                    <textarea ref={this.searchVal} onChange={this.updateSearchValue} type=\"text\" required />\n                </div>\n                <Select ref={this.dropList} defaultValue={options[0]} onChange={this.updateTopDownhValue} options = {options} />\n                <button onClick={this.onSearchButtonClicked}>Search</button>\n                <p className=\"error pink-text center-align\"></p>\n            </form> */}\n            \n            {/* <ul className=\"container\" bind={this.state.siteList}>\n                {this.state.siteList.map((site, i) => (\n                  <li key = {i}>\n                  <SiteComponent props={site}/>\n                  <button><Link to={'/updateSite/'+site.id}>update Site</Link></button>\n                  </li>\n                ))\n                }\n            </ul> */}\n            <button className=\"btn pink lighten-1\" type=\"button\"><Link className=\"white-text\" to=\"/adminPage\">Return to Admin Menu</Link></button>\n        </div>\n    )    \n  }\n}\n\nexport default ChangeSite","import { myDatabase } from './firebase'\n\n\nexport async function createNewSite(site){\n    await myDatabase.collection('sites').add({\n      name: site.name,\n      city: site.city,\n      country: site.country,\n      tags: site.tags,\n      adress: site.adress,\n      externalSourceUrl: site.externalSourceUrl,\n      imageUrl: site.imageUrl,\n      fullInfo: site.fullInfo,\n      partialInfo: site.partialInfo,\n      latitude: site.latitude,\n      longitude: site.longitude\n    })\n}\n\n\nexport async function UpdateSite(site){\n    await myDatabase.collection('sites').doc(site.id).update({\n      name: site.name,\n      city: site.city,\n      country: site.country,\n      tags: site.tags,\n      adress: site.adress,\n      externalSourceUrl: site.externalSourceUrl,\n      imageUrl: site.imageUrl,\n      fullInfo: site.fullInfo,\n      partialInfo: site.partialInfo,\n      latitude: site.latitude,\n      longitude: site.longitude\n    })\n}\n\n\nexport async function DeleteSiteFromDB(site){\n    await myDatabase.collection('sites').doc(site.id).delete();\n}\n\n\nexport async function getUserClaims(user){\n    if(!user){\n        return \"guest\"\n    }\n    let userClaims = \"registered\"\n    var tokenResult = await user.getIdTokenResult()\n    user.admin = tokenResult.claims.admin;\n    if (user.admin) {\n        userClaims = \"admin\"\n    } else {\n        console.log(\"is registered\")\n        userClaims = \"registered\"\n    }\n    return userClaims;\n}\n\n\nexport async function getFavoritesIDs(userid) {\n    const user = await myDatabase.collection('accounts').doc(userid).get()\n    return user.data().favorites\n}\n\n\nexport async function getRoadFavoritesIDs(userid) {\n    const user = await myDatabase.collection('accounts').doc(userid).get()\n    return user.data().RoadsFavorites\n}\n\n\nexport async function getFavorites(userid){\n    var resultOfSite = []\n    var siteList = await getFavoritesIDs(userid)\n    var id = 0\n    // console.log(siteList);\n    for (const site of siteList){\n        const siteFromFireStore = await myDatabase.collection('sites').doc(site).get();\n        var getData = siteFromFireStore.data();\n        // console.log(getData);\n        resultOfSite.push({\n            tags: getData.tags,\n            name: getData.name,\n            city: getData.city,\n            country: getData.country,\n            id: id,\n            uid: site\n        })\n        id +=1;\n    }\n    return resultOfSite;\n}\n\n\nexport async function updateUserFavorites(userid, newFavorites) {\n    await myDatabase.collection('accounts').doc(userid).update({\n        'favorites': newFavorites\n        })\n        .catch(function(error) {\n          console.error(\"Error removing document: \", error);\n        });\n}\n\n\nexport async function getSiteByID(siteid) {\n    return  (await myDatabase.collection('sites').doc(siteid).get()).data()\n}\n\n\nexport async function createNewRoad( {siteListID,roadName,roadDescription,CityList,CountryList,TagList,searchTokens} ){\n    console.log(TagList)\n    await myDatabase.collection('roads').add({\n        name: roadName,\n        description: roadDescription,\n        siteList: siteListID,\n        city:CityList,\n        country:CountryList,\n        tags: TagList,\n        searchTokens:searchTokens\n\n    })\n}\n\n\nexport async function updateUserRoadsFavorites(userid, newFavorites) {\n    await myDatabase.collection('accounts').doc(userid).update({\n        'RoadsFavorites': newFavorites\n        })\n        .catch(function(error) {\n          console.error(\"Error removing document: \", error);\n        });\n}\n\n\nexport async function deleteRoadFromDB(road){\n    await myDatabase.collection('roads').doc(road.id).delete();\n}","import React, { Component } from 'react'\nimport {createNewSite} from '../firebase/FirebaseUtilities'\nimport { Link } from 'react-router-dom'\n\nclass CreateSite extends Component {\n  constructor(props){\n    super(props)\n    console.log(props)\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      tags:[],\n      Name: '',\n      city: '',\n      country: '',\n      adress: '',\n      externalSourceUrl: '',\n      imageUrl: '',\n      fullInfo: '',\n      partialInfo: '',\n      latitude: null,\n      longitude: null\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  handleChangeTokens(e,index){\n    var tags = this.state.tags\n    tags[index] = e.target.value;\n    this.setState({\n      tags: this.state.tags\n    })\n  }\n  \n  addToken = (e) => {\n    this.setState({\n      tags:[...this.state.tags,\"\"]\n    })\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n    const searchTokens = Array.from(new Set([...this.state.tags,this.state.city,this.state.city,...this.state.name.split(\" \")]))\n    console.log(searchTokens)\n    var site = {\n      name: this.state.name,\n      city: this.state.city,\n      country: this.state.country,\n      tags: this.state.tags,\n      adress: this.state.adress,\n      externalSourceUrl: this.state.externalSourceUrl,\n      imageUrl: this.state.imageUrl,\n      fullInfo: this.state.fullInfo,\n      partialInfo: this.state.partialInfo,\n      latitude: parseFloat(this.state.latitude),\n      longitude: parseFloat(this.state.longitude),\n      searchTokens: searchTokens,\n    }\n    await createNewSite(site)\n    alert(\"created a new site\");\n    this.props.history.push('/adminPage');\n  }\n\n  deleteTag = (e,index) =>{\n    var tags = [...this.state.tags]\n    tags.splice(index,1)\n    this.setState({tags: tags});\n  }\n\n\n  render() {\n    return (\n      <div className=\"container\">\n          <h5 className=\"grey-text text-darken-3\">Create a New Site</h5>\n          <form onSubmit={(e)=> this.handleSubmit(e)} id=\"create-site-form\">\n          <div className=\"input-field\">\n            <input type=\"text\" id='name' onChange={this.handleChange} required/>\n            <label htmlFor=\"name\"> Site Name</label>\n          </div>\n          <div className=\"input-field\">\n            <textarea id=\"city\" className=\"materialize-textarea\" onChange={this.handleChange} required></textarea>\n            <label htmlFor=\"city\"> City Name</label>\n          </div>\n          <div className=\"input-field\">\n            <textarea id=\"country\" className=\"materialize-textarea\" onChange={this.handleChange} required></textarea>\n            <label htmlFor=\"country\"> Country Name</label>\n          </div>\n          <div className=\"input-field\">\n            <textarea id=\"adress\" className=\"materialize-textarea\" onChange={this.handleChange} required></textarea>\n            <label htmlFor=\"adress\">  Address</label>\n          </div>\n          <div className=\"input-field\">\n            <textarea id=\"externalSourceUrl\" className=\"materialize-textarea\" onChange={this.handleChange} required></textarea>\n            <label htmlFor=\"externalSourceUrl\" > External Url Link</label>\n          </div>\n          <div className=\"input-field\">\n            <textarea id=\"imageUrl\" className=\"materialize-textarea\" onChange={this.handleChange} required></textarea>\n            <label htmlFor=\"imageUrl\"> Image Url Link</label>\n          </div>\n          <div className=\"input-field\">\n            <textarea id=\"fullInfo\" className=\"materialize-textarea\" onChange={this.handleChange} required></textarea>\n            <label htmlFor=\"fullInfo\"> Enter Description</label>\n          </div>\n          <div className=\"input-field\">\n            <textarea id=\"partialInfo\" className=\"materialize-textarea\" onChange={this.handleChange} required></textarea>\n            <label htmlFor=\"partialInfo\"> Enter Marker Description</label>\n          </div>\n          <div className=\"input-field\">\n            <textarea id=\"latitude\" className=\"materialize-textarea\" onChange={this.handleChange} required></textarea>\n            <label htmlFor=\"latitude\"> Enter latitude</label>\n          </div>\n          <div className=\"input-field\">\n            <textarea id=\"longitude\" className=\"materialize-textarea\" onChange={this.handleChange} required></textarea>\n            <label htmlFor=\"longitude\"> Enter longitude</label>\n          </div>\n          <label>Tags</label>\n          {\n            this.state.tags.map((token,index) => {\n              return (\n                <div key={index}>\n                  <input  onChange={(e) => this.handleChangeTokens(e,index)} value={token}  /> \n                  <button type=\"button\" onClick={(e) => this.deleteTag(index)}> Delete Tag</button>\n                </div>\n              )\n            })\n          }\n          <hr/>\n          <button type=\"button\" id=\"token\" onClick={this.addToken}>Add Tag</button>\n          <hr/>\n          <div className=\"input-field\">\n          <button type=\"submit\" className=\"btn pink lighten-1\" color=\"red\">Create Site</button>\n            <button style={{marginLeft:\"50px\"}} type=\"button\" className=\"btn pink lighten-1\"><Link className=\"white-text\" to=\"/adminPage\">Return to Admin Menu</Link></button>\n          </div>\n          </form>\n      </div>\n    )\n  }\n}\n\nexport default CreateSite","import React, { Component } from 'react'\nimport {findFromDB} from '../search/SearchUtils'\nimport {DeleteSiteFromDB} from '../firebase/FirebaseUtilities'\nimport { Link } from 'react-router-dom'\nimport SiteSearch from '../search/SiteSearch'\n\n\nclass DeleteSite extends Component {\n\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n    this.state = {\n        searchVal: props.match.params.searchVal ? props.match.params.searchVal : '',\n        topDownValue: 'tags',\n        // siteList: []\n    }\n    this.onSearchButtonClicked = this.onSearchButtonClicked.bind(this);\n    this.updateSearchValue = this.updateSearchValue.bind(this);\n    this.updateTopDownhValue = this.updateTopDownhValue.bind(this);\n};\n\nDeleteSite = async(e, sid) => {\n  const siteList = this.myRef.current.state.siteList;\n  e.preventDefault();\n  console.log(siteList);\n  const site = siteList.find((s)=> s.id === sid );\n  const index = siteList.indexOf(site);\n  await DeleteSiteFromDB(site)\n  console.log(\"site\" + site.name + \"had deleted\")\n  \n  siteList.splice(index,1)\n  this.setState({siteList});\n}\n\n\nasync onSearchButtonClicked(e) {\n    e.preventDefault();\n\n    const result = await findFromDB(this.state.topDownValue, this.state.searchVal)\n    this.setState({siteList: result})\n}\n\nupdateSearchValue(e) {\n  this.setState({searchVal: e.target.value})\n}\n\nupdateTopDownhValue(e) {\n  this.setState({topDownValue: e.value})\n}\n\nrender() {\n    return (\n        <div>\n            <h5 className=\"grey-text text-darken-3\">Search Site to Delete</h5>\n            {/* <form ref={this.form} id=\"search-form\">\n                <div className=\"search-field\">\n                    <textarea ref={this.searchVal} onChange={this.updateSearchValue} type=\"text\" required />\n                </div>\n                <Select ref={this.dropList} defaultValue={options[0]} onChange={this.updateTopDownhValue} options = {options} />\n                <button onClick={this.onSearchButtonClicked}>Search</button>\n                <p className=\"error pink-text center-align\"></p>\n            </form> */}\n            \n            <SiteSearch ref={this.myRef}\n              siteList={this.state.siteList}\n              onClickMethod={this.DeleteSite} \n              buttonName={`Delete site`}\n              canRenderButton={() => true}\n              searchVal={this.state.searchVal}\n              returnTo='deleteSite'/>\n\n            {/* <ul className=\"container\" bind={this.state.siteList}>\n                {this.state.siteList.map((site, i) => (\n                  <li key = {i}>\n                  <SiteComponent props={site}/>\n                  <button onClick={(e) => this.DeleteSite(e,i)}>Delete Site</button>\n                  </li>\n                ))\n                }\n              </ul>*/}\n            <button className=\"btn pink lighten-1\"><Link className=\"white-text\" to=\"/adminPage\">Return to Admin Menu</Link></button>\n        </div>\n    )    \n  }\n}\n\nexport default DeleteSite","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\n\nclass AdminPage extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n          <p> Welcome to Admin Menu, Please select a Option:</p>\n          <button className=\"btn pink lighten-1\"><Link className=\"white-text\" to=\"/adminPage\">Site Management</Link></button>\n          <button style={{marginLeft:\"30px\"}} className=\"btn pink lighten-1\"><Link className=\"white-text\" to=\"/auth\">Users Management</Link></button>\n      </div>\n    )\n  }\n}\n\nexport default AdminPage","import React, { Component } from 'react'\nimport {myFunctions} from '../firebase/firebase'\nimport { Link } from 'react-router-dom'\n\nclass AdminMenu extends Component {\n  state = {\n    action: '',\n    email: \"\"\n  }\n  \n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  deleteUser = (e) => {\n      const email = this.state.email\n      console.log(email)\n      this.setState({email:\"\"})\n      const deleteUserByEmails = myFunctions.httpsCallable('deleteUserByEmails');\n      deleteUserByEmails({email: email}).then(result => {\n        alert(result.data.message)    \n        this.props.history.push(\"/admin\")    \n      })\n  }\n\n  createAdmin = (e) => {\n    const email = this.state.email\n    console.log(email)\n    this.setState({email:\"\"})\n    const addAdminRole = myFunctions.httpsCallable('addAdminRole');\n    addAdminRole({email: email}).then(result => {\n      console.log(result)\n        alert(result.data.message)    \n        this.props.history.push(\"/admin\")\n    })\n  }\n\n  activeAction = (e) => {\n    this.setState({\n      action: e.target.id\n      \n    })\n  }\n  \n  render() {\n    const action = this.state.action;\n    if(action === \"deleteUser\"){\n         return(\n            <div className=\"input-field\">\n            <input id=\"email\" onChange={this.handleChange}placeholder=\"Email Address\" value={this.state.email}></input>\n            <button className=\"btn pink lighten-1\" id='deleteUser' onClick={this.deleteUser}>Delete User Via Email</button>\n            <button style={{marginLeft:\"50px\"}} className=\"btn pink lighten-1\" id='' onClick={this.activeAction}>Retrun</button>\n            </div>\n         )   \n    } else if (action === \"createAdmin\"){\n        return (\n            <div className=\"input-field\">\n            <input id=\"email\" onChange={this.handleChange} placeholder=\"Email Address\" value={this.state.email}></input>\n            <button className=\"btn pink lighten-1\" id='deleteUser' onClick={this.createAdmin}>Create Admin Via Email</button>\n            <button style={{marginLeft:\"50px\"}} className=\"btn pink lighten-1\" id='' onClick={this.activeAction}>Retrun</button>\n            </div>\n        )\n    }    \n    return (\n    <div className=\"container\">\n      <h5 className=\"black-text text-darken-3\">Admin Authorities Options:</h5>\n      <button className=\"btn pink lighten-1\" id='createAdmin' onClick={this.activeAction}>Add Admin Via Email</button>\n      <button style={{marginLeft:\"30px\"}} className=\"btn pink lighten-1\" id='deleteUser' onClick={this.activeAction}>Delete User</button>\n      <p>please choose option</p>\n      <Link className=\"btn blue lighten-1\" to='/admin'>Return to Admin Menu</Link>\n    </div>\n    )    \n  }\n}\n\nexport default AdminMenu","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst RoadComponent = ({props}) => {\r\n  var info_url = '/road/'+props.id\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n    <div className=\"card-content grey-text text-darken-3\">\r\n      <div className=\"site-name \">Road name: {props.name}</div>\r\n      <div className=\"site-city \">Cities: {props.city.join(\", \")}.</div>\r\n      <div className=\"site-country \">Countries: {props.country.join(\", \")}.</div>\r\n      {\r\n        <div className=\"container\">\r\n            {props.tags.map((tag, i) => {\r\n               return (<span key = {i}> {tag} </span>) \r\n            })}\r\n        </div>  \r\n      }\r\n      <Link to={info_url}>More info</Link>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default RoadComponent","import React, { Component } from 'react'\nimport {findFromDB} from './SearchUtils'\nimport SiteComponent from '../sites/siteComponent'\nimport { PaginatedList } from 'react-paginated-list'\nimport RoadComponent from 'components/road/RoadComponent';\n\n\n/**\n * This component is holds the all of th elements of a search page and calls functions that execute searches.\n */\nclass GeneralSearch extends Component {\n\n    // A constructor that sets the values of this component's state.\n    constructor(props) {\n        super(props);\n\n        // Extracting the props that the constructor recieves.\n        const { buttonName, onRoadClickMethod, onSiteClickMethod, canRenderButtonSite, canRenderButtonRoad, searchVal, returnTo } = props;\n\n        this.state = {\n            // Is true if a search value is sent, and false otherwise.\n            haveSearched: false,\n\n            // The search value as array of strings.\n            searchVal: searchVal ? searchVal.split(' ') : [],\n\n            // The array of search results.\n            searchResult: [],\n\n            // Button content next to each entry\n            buttonName,\n\n            // The beginning of the address that is set after the search button is pressed.\n            returnTo: returnTo,\n\n            siteFilter: true,\n\n            roadFilter: true\n        }\n\n        // onClick event handler for an entry button.\n        this.onSiteClickMethod = onSiteClickMethod ? onSiteClickMethod.bind(this) : null;\n\n        // onClick event handler for an entry button.\n        this.onRoadClickMethod = onRoadClickMethod ? onRoadClickMethod.bind(this) : null;\n\n        // Boolean function for conditional button rendering.\n        this.canRenderButtonSite = canRenderButtonSite ? canRenderButtonSite.bind(this) : null;\n\n        this.canRenderButtonRoad = canRenderButtonRoad ? canRenderButtonRoad.bind(this) : null;\n\n        this.onSearchButtonClicked = this.onSearchButtonClicked.bind(this);\n\n        this.updateSearchValue = this.updateSearchValue.bind(this);\n    };\n\n    // transition to a new page based on the \"returnTo\" and the search value.\n    onSearchButtonClicked(e) {\n        e.preventDefault();\n\n        console.log(this.state.searchVal)\n\n        window.location.href = '/' + this.state.returnTo + '/' + this.state.searchVal\n    }\n\n\n    // The search function that calls for searches in the database.\n    async executeSearch() {\n        const result = await findFromDB(this.state.searchVal, ['sites', 'roads'])\n        // console.log(result)\n        this.setState({searchResult: result,\n                        haveSearched: true})\n    }\n\n\n    // Updates the value of \"searchVal\" based on the content of the input box.\n    updateSearchValue(e) {\n        // console.log(e.target.value)\n        this.setState({searchVal: e.target.value})\n    }\n\n    // Execute the search if the componenet recieved a search value.\n    async componentWillMount() {\n        if(this.state.searchVal.length >= 1) {\n            await this.executeSearch()\n        }\n    }\n\n\n    /**\n     * This function executes when the user clicks on the site filter button, and it sets boolean values in order to filter the results.\n     */\n    siteFilterClicked = () => {\n        if (!this.state.roadFilter) {\n            this.setState({roadFilter: true})\n        } else {\n            this.setState({siteFilter: true, roadFilter: false})\n        }\n    }\n\n\n    /**\n     * This function executes when the user clicks on the road filter button, and it sets boolean values in order to filter the results.\n     */\n    roadFilterClicked = () => {\n        if (!this.state.siteFilter) {\n            this.setState({siteFilter: true})\n        } else {\n            this.setState({siteFilter: false, roadFilter: true}) \n        }\n    }\n\n\n    /**\n     * This function is used to filter (by site or by road) the results based on boolean values.\n     */\n    resultsFilter = (result) => {\n        return (this.state.siteFilter && result.type == 'sites') ||\n            (this.state.roadFilter && result.type == 'roads')\n    }\n\n\n    // Renders the component.\n    render() {\n\n        // Predicate that decides the color of the button of the site filter.\n        const siteColorPredicate = !this.state.roadFilter ? 'yellow' : 'white'\n\n        // Predicate that decides the color of the button of the road filter.\n        const roadColorPredicate = !this.state.siteFilter ? 'yellow' : 'white'\n\n        // Extract \"buttonName\" and \"searchResult\" variable for ease of use.\n        const { buttonName, searchResult } = this.state;\n\n        // Creates a variable that holds the mapping of \"SiteComponent\" for paging later on.\n        const mapping = (list) => list.map((site, i) => {\n            return  (\n                        <div key={i}>\n                        {site.type === 'sites' && this.state.siteFilter ?\n                            (<div>  \n                                <SiteComponent key={i} props={site}/>\n                                {this.onSiteClickMethod && buttonName && this.canRenderButtonSite(site.id) &&\n                                    <button onClick={(e) => this.onSiteClickMethod(e, site.id)}>{buttonName}</button>}\n                            </div>)\n                            : site.type === 'roads' && this.state.roadFilter ?\n                            (<div>  \n                                <RoadComponent key={i} props={site}/>\n                                {this.onRoadClickMethod && buttonName && this.canRenderButtonRoad(site.id) &&\n                                    <button onClick={(e) => this.onRoadClickMethod(e, site.id)}>{buttonName}</button>}\n                            </div>) : ''\n                        }\n                        </div>\n\n                    );\n        });      \n\n        return (\n            <div>\n                {/* Search site form */}\n                <form ref={this.form} id=\"search-form\">\n                    <div className=\"search-field\">\n                        <input value={this.state.haveSearched ? this.state.searchVal.join(\" \") : this.state.searchVal} ref={this.searchVal} onChange={this.updateSearchValue} type=\"text\" required />\n                    </div>\n                    <div>\n                        <button onClick={this.onSearchButtonClicked} type=\"submit\">Search</button>\n                    </div>\n                    <p className=\"error pink-text center-align\"></p>\n                </form>\n\n                <div>\n                    <button onClick={this.siteFilterClicked} style={{backgroundColor: siteColorPredicate}}>Sites</button>\n                    <button onClick={this.roadFilterClicked} style={{backgroundColor: roadColorPredicate}}>Roads</button>\n                </div>\n                \n                {/* Results */}\n                <div className=\"container\">\n                    {searchResult.length !== 0 && <PaginatedList\n                        list={searchResult.filter(this.resultsFilter)}\n                        itemsPerPage={3}\n                        renderList={mapping}/>}\n                </div>\n\n                {\n                    this.state.searchVal.length != 0 && this.state.searchResult.length == 0 && this.state.haveSearched ?\n                        (<h5>No matches found.</h5>) : ''\n                }\n            </div>\n        )    \n    }\n}\n\nexport default GeneralSearch","import React, { Component } from 'react'\nimport {myFirebase} from '../firebase/firebase'\nimport {getUserClaims, updateUserFavorites, getFavoritesIDs, getRoadFavoritesIDs, updateUserRoadsFavorites} from '../firebase/FirebaseUtilities'\nimport GeneralSearch from './GeneralSearch';\n\n\n/**\n * This component is the search menu.\n */\nclass SearchMenu extends Component {\n\n    // A constructor that sets the values of this component's state.\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            // Holds the registered user's id in order to get it's favorites list.\n            userid: \"\",\n\n            // Holds the user's claim (guest/registered/admin), used to decide whether a \"add to favorites\" button appears.\n            claim: \"guest\",\n\n            // In case a user is registered this hold the site id's of it's favorite sites.\n            siteFavoriteList: [],\n\n            // In case a user is registered this hold the road id's of it's favorite roads.\n            roadFavoriteList: [],\n\n            // Pulls a string in the address' parameters into \"searchVal\", otherwise sets empty string.\n            searchVal: props.match.params.searchVal ? props.match.params.searchVal : ''\n        }\n        // console.log(this.state.searchVal)\n        this.canRenderButtonSite = this.canRenderButtonSite.bind(this);\n        this.canRenderButtonRoad = this.canRenderButtonRoad.bind(this);\n    }\n\n\n    /**\n     * This function returns true if the user is not a guest and the site id (sid) is not in the user's favorites list.\n     * Otherwise, it returns false.\n     * This function is used to decide whether or not to show the \"add to favorites\" button.\n     */\n    canRenderButtonSite = (sid) => {\n        if(this.state.claim !== \"guest\") {\n            // console.log(`tis not a guest`);\n            if(!this.state.siteFavoriteList.includes(sid)) {\n                return true\n            }\n        }\n        return false\n    }\n\n\n    /**\n     * This function returns true if the user is not a guest and the road id (sid) is not in the user's favorites list.\n     * Otherwise, it returns false.\n     * This function is used to decide whether or not to show the \"add to favorites\" button.\n     */\n    canRenderButtonRoad = (sid) => {\n        if(this.state.claim !== \"guest\") {\n            // console.log(`user is not a guest`);\n            if(!this.state.roadFavoriteList.includes(sid)) {\n                return true\n            }\n        }\n        return false\n    }\n\n\n    /**\n     * This function recieves an id and adds it to the user's favorite sites list in the database and in this component.\n     */\n    addSiteToFavorites = async(e, sid) => {\n        var favorites = this.state.siteFavoriteList\n        favorites.push(sid)\n        updateUserFavorites(this.state.userid, favorites)\n        \n        this.setState({siteFavoriteList: favorites})\n    }\n\n\n    /**\n     * This function recieves an id and adds it to the user's favorite roads list in the database and in this component.\n     */\n    addRoadToFavorites = async(e, sid) => {\n        var favorites = this.state.roadFavoriteList\n        favorites.push(sid)\n        updateUserRoadsFavorites(this.state.userid, favorites)\n        \n        this.setState({roadFavoriteList: favorites})\n    }\n\n\n    /**\n     * This function is used in case the user has changed to get it's current claim, favorites and id.\n     */\n    async componentDidMount() {\n        myFirebase.auth().onAuthStateChanged(async (user) => {\n            if(user) {\n                this.setState({ userid: user.uid,\n                                claim: await getUserClaims(user),\n                                siteFavoriteList: await getFavoritesIDs(user.uid),\n                                roadFavoriteList: await getRoadFavoritesIDs(user.uid) });\n            }\n       })\n    }\n\n\n    /**\n     * This function renders the components by calling the \"SiteSearch\" component.\n     */\n    render() {\n        return (\n            /**\n             * The string in this component's searchVal is used has the value by which the search is executed.\n             * The function \"canRenderButtonSite\" is used to decide whether or not to show button for each site search result.\n             * The function \"canRenderButtonRoad\" is used to decide whether or not to show button for each road search result.\n             * The string \"Add to favorites\" is placed inside the button.\n             * The function \"addSiteToFavorites\" for execution in case the button was pressed for a site.\n             * The function \"addRoadToFavorites\" for execution in case the button was pressed for a road.\n             * The string \"searchSite\" is used as to transition to this component's address when the search button is pressed.\n             */ \n            <GeneralSearch\n                onSiteClickMethod={this.addSiteToFavorites}\n                onRoadClickMethod={this.addRoadToFavorites}\n                buttonName={`Add to favorites`}\n                canRenderButtonSite={this.canRenderButtonSite}\n                canRenderButtonRoad={this.canRenderButtonRoad}\n                searchVal={this.state.searchVal}\n                returnTo='search'/>\n        );\n    }\n}\n\nexport default SearchMenu","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst h1Style = {\r\n    display:\"block\",\r\n    color:\"darkblue\",\r\n    fontWEIGHT:\"bold\"\r\n}\r\nconst buttonStyle = {\r\n    backgroundColor:\"lightBlue\",\r\n    color:\"white\",\r\n    padding:\"8px\",\r\n    border:\"black\",\r\n    textAlight:\"center\",\r\n    margin:\"4px 2px\",\r\n    borderRadius:\"12px\"\r\n}\r\n\r\nclass About extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 style={h1Style}> About us </h1>\r\n        <div className=\"elementor-widget-container\">\r\n    \t\t\t<p><strong>SonShine: bringing light to the world in their memory</strong>, was founded by Bat-Galim and Ophir Shaer in memory of their son Gil-ad, one of the three boys kidnapped and murdered in the summer of 2014.</p>\r\n          <p>“<strong>During the eighteen <em>(chai), </em>days of searching, worrying and not knowing what had happened to the kidnapped boys, we experienced unprecedented support from Jews all over the world. This was absolute proof of the strong feelings of mutual responsibility and the global connection felt by Jews throughout the world. Our goal is to encourage and leverage this connection and strength.</strong></p>\r\n          <p><strong>The strength we discovered as individuals and as a nation during those difficult eighteen days, and the optimistic approach we chose after discovering the bitter fate of the boys, must inform our day to day lives and strengthen the spirit of every Jew throughout the world</strong>.” &nbsp;Bat-Galim Shaer</p>\r\n          <p><img className=\"wp-image-1024 alignright\" src=\"http://sonshine.org.il/wp-content/uploads/2019/07/תמונה-זוגית-מיכל-גלעדי.jpg\" alt=\"\" width=\"569\" height=\"379\" srcSet=\"http://sonshine.org.il/wp-content/uploads/2019/07/תמונה-זוגית-מיכל-גלעדי.jpg 1600w, http://sonshine.org.il/wp-content/uploads/2019/07/תמונה-זוגית-מיכל-גלעדי-300x200.jpg 300w, http://sonshine.org.il/wp-content/uploads/2019/07/תמונה-זוגית-מיכל-גלעדי-768x512.jpg 768w, http://sonshine.org.il/wp-content/uploads/2019/07/תמונה-זוגית-מיכל-גלעדי-1024x682.jpg 1024w\" sizes=\"(max-width: 569px) 100vw, 569px\" /></p>\r\n          <p>Bat-Galim (47) an educator and social activist and her husband, Ophir (48) a lawyer and tax specialist established the organization to enhance optimism and a sense of unity in Israel and throughout the world.&nbsp; Its goal is to encourage a positive and constructive approach especially during times of crisis and challenge. They are the parents of six children and are among the founders and promoters of “Unity Day” and the “Jerusalem Prize for Jewish Unity.</p>\r\n          <p>Bat-Galim has been its CEO since its beginning. She is an educator for over twenty years with a B.A. in History and Political Science and an M.A. in Educational Administration. She lectures in Israel and throughout the world to promote dialogue and projects to foster Jewish unity.</p>\r\n          <p>The activities of the three families to promote unity and connections within Israeli society and throughout the world was formally recognized by the Government of Israel when the three mothers were honored by the privilege of lighting a torch at the National Independence Day Celebration in 2019.</p>\r\n          <p>Sonshine continues to work on projects and new initiatives to foster optimism and unity among the Jewish people.</p>\r\n          <p><iframe src=\"https://www.youtube.com/embed/SQuo9tAFJMA\" width=\"560\" height=\"315\" frameBorder=\"0\" allowFullScreen=\"allowfullscreen\"></iframe><iframe src=\"https://www.youtube.com/embed/I6fOafWrTOI\" width=\"560\" height=\"315\" frameBorder=\"0\" allowFullScreen=\"allowfullscreen\"></iframe></p>\r\n\t\t    </div>\r\n        <button style={buttonStyle}><Link style={{color:\"black\"}} to=\"/menu\">Retrun to main Menu</Link></button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default About","import React, { Component } from 'react';\nimport {myFirebase} from '../firebase/firebase';\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport {getUserClaims} from '../firebase/FirebaseUtilities'\nimport AdminLinks from './AdminLinks';\nimport * as ReactBootStrap from \"react-bootstrap\";\nimport {\n    BrowserRouter as Router,\n    Link,\n    NavLink\n  } from \"react-router-dom\";\n\nclass Navbar extends Component {\n  state=({\n    isLoggedIn: false,\n    isAdmin:false\n  }) \n  \n  async componentDidMount(){\n    myFirebase.auth().onAuthStateChanged(async (user) => {\n      var claim = await getUserClaims(user);\n      if(claim === \"admin\"){\n        this.setState({isAdmin: true,\n                      isLoggedIn: true}\n      )}\n      else if(user){\n        this.setState({isLoggedIn: true, isAdmin: false})\n      }else{\n        this.setState({isLoggedIn: false,\n                      isAdmin: false\n        })\n      }      \n   })\n  }\n\n  render() {\n    \n    if(this.state.isLoggedIn){\n      return (\n        <nav className=\"nav-wrapper dark\">\n            <div className=\"App\" >\n          {/* <Link to='/menu' className=\"brand-logo\">Jewish Trail</Link> */}\n            <ReactBootStrap.Navbar collapseOnSelect expand=\"xl\" bg=\"dark\" variant=\"dark\">\n          <ReactBootStrap.Navbar.Brand href=\"/Menu\">Jewish Trail</ReactBootStrap.Navbar.Brand>\n          <ReactBootStrap.Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <ReactBootStrap.Navbar.Collapse id=\"responsive-navbar-nav\"> \n            <ReactBootStrap.Nav className=\"mr-auto\">\n            \n              <ReactBootStrap.Nav.Link href=\"/LogOut\">Log Out</ReactBootStrap.Nav.Link>\n              <ReactBootStrap.Nav.Link href=\"/about\">About</ReactBootStrap.Nav.Link>\n              <ReactBootStrap.Nav.Link href=\"/search\">Search</ReactBootStrap.Nav.Link>\n              <ReactBootStrap.Nav.Link href=\"/favorites\">Favorites</ReactBootStrap.Nav.Link>\n                {\n                  this.state.isAdmin && (<ReactBootStrap.Nav.Link href=\"/admin\">Admin Page</ReactBootStrap.Nav.Link>)\n                }          \n            </ReactBootStrap.Nav>\n        </ReactBootStrap.Navbar.Collapse>    \n      </ReactBootStrap.Navbar>\n      </div>\n      </nav>\n\n      )\n    }\n    return (\n\n      <nav className=\"nav-wrapper dark\">\n      <div className=\"App\" >\n    {/* <Link to='/menu' className=\"brand-logo\">Jewish Trail</Link> */}\n      <ReactBootStrap.Navbar collapseOnSelect expand=\"xl\" bg=\"dark\" variant=\"dark\">\n    <ReactBootStrap.Navbar.Brand href=\"/Menu\">Jewish Trail</ReactBootStrap.Navbar.Brand>\n    <ReactBootStrap.Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n    <ReactBootStrap.Navbar.Collapse id=\"responsive-navbar-nav\"> \n      <ReactBootStrap.Nav className=\"mr-auto\">\n      \n        <ReactBootStrap.Nav.Link href=\"/LoginPage\">Log In </ReactBootStrap.Nav.Link>\n        <ReactBootStrap.Nav.Link href=\"/about\">About</ReactBootStrap.Nav.Link>\n        <ReactBootStrap.Nav.Link href=\"/searchSite\">Search Site</ReactBootStrap.Nav.Link>\n      </ReactBootStrap.Nav>\n  </ReactBootStrap.Navbar.Collapse>    \n</ReactBootStrap.Navbar>\n</div>\n</nav>\n    )\n  }\n}\nexport default Navbar","import React, { Component } from 'react';\r\nimport {myFirebase} from '../firebase/firebase';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n\r\n    logout(e){\r\n        // check if user online or not.\r\n        myFirebase.auth().signOut().then(() =>{\r\n            console.log(\"logged out\")\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Its Time To Say Goodbye</h1>\r\n                <button onClick={this.logout}><Link to=\"/\">Logout</Link></button>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport {myFirebase} from '../firebase/firebase';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n\r\n    logout(e){\r\n        // check if user online or not.\r\n        myFirebase.auth().signOut().then(() =>{\r\n            console.log(\"logged out\")\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Welcome!</h1>\r\n                <button  className=\"btn white lighten-1 z-depth-0 \"><Link to=\"LoginPage\">Log In</Link></button>\r\n                <button  className=\"btn white lighten-1 z-depth-0 \"><Link to=\"Menu\">Enter as guest </Link></button>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Home;","import React from 'react'\r\n\r\nconst siteHandle = ({props,deleteSite}) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n    <div className=\"card-content grey-text text-darken-3\">\r\n      <div className=\"site-name \">name: {props.name}</div>\r\n      <div className=\"site-city \">city: {props.city}</div>\r\n      <div className=\"site-country \">Country: {props.country}</div>\r\n      {\r\n        <div className=\"container\">\r\n            {props.tags.map((tag, i) => {\r\n               return (<span key = {i}> {tag} </span>) \r\n            })}\r\n        </div>\r\n      }\r\n      <button onClick={()=>deleteSite(props.id,props.uid)}>Delete Site</button>  \r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default siteHandle","import React, { Component } from 'react'\r\nimport {getFavorites} from '../firebase/FirebaseUtilities'\r\nimport SiteHandle from './siteHandle'\r\nimport {myDatabase, myFirebase} from '../firebase/firebase'\r\n\r\nclass Favorites extends Component {\r\n  state = {\r\n    favoritesArr: [],\r\n    userid: \"\"\r\n  }\r\n  async componentDidMount(){\r\n    var siteList = []\r\n    myFirebase.auth().onAuthStateChanged(async (user) => {\r\n      siteList = await getFavorites(user.uid);\r\n      this.setState({\r\n        favoritesArr: siteList, userid: user.uid\r\n      });\r\n      // this.setState({claim: await getUserClaims(user)});\r\n    })\r\n  }\r\n  async deleteFromFirebase(id,uid){\r\n    var userid = this.state.userid;\r\n    var uidList =[]\r\n    this.state.favoritesArr.forEach(site=>{\r\n      if(site.uid !== uid){\r\n        uidList.push(site.uid);\r\n      }\r\n    })\r\n\r\n    await myDatabase.collection('accounts').doc(userid).update({\r\n    'favorites': uidList\r\n    })\r\n    .catch(function(error) {\r\n      console.error(\"Error removing document: \", error);\r\n    });\r\n  }\r\n\r\n  deleteSite = (id,uid) =>  {\r\n     let favorites = this.state.favoritesArr.filter(site =>{\r\n      return site.id !== id\r\n    });\r\n    this.setState({\r\n      favoritesArr: favorites\r\n    })\r\n    this.deleteFromFirebase(id,uid);\r\n  }\r\n\r\n\r\n  render() {\r\n    //if (this.state.favorites){  \r\n      return (\r\n        <div className=\"container\">\r\n            {this.state.favoritesArr.map((site, i) => (\r\n              <SiteHandle deleteSite ={this.deleteSite} key={i} props={site}/>\r\n            ))}\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default Favorites","import React, { Component } from \"react\";\nimport { getSiteByID } from '../firebase/FirebaseUtilities'\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet'\nimport { myIcon } from '../map/MapUtilities'\n\nclass SitePage extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            site_id: props.match.params.id,\n            name: '',\n            city: '',\n            country: '',\n            address: '',\n            fullInfo: '',\n            imageUrl: '',\n            externalSourceUrl: '',\n            latitude: 1,\n            longitude: 1\n        }\n    };\n\n    async componentWillMount() {\n        var all_site_props = await getSiteByID(this.state.site_id)\n        console.log(all_site_props)\n        this.setState({ name: all_site_props.name,\n                        city: all_site_props.city,\n                        country: all_site_props.country,\n                        address: all_site_props.address,\n                        fullInfo: all_site_props.fullInfo,\n                        imageUrl: all_site_props.imageUrl,\n                        externalSourceUrl: all_site_props.externalSourceUrl,\n                        latitude: all_site_props.latitude,\n                        longitude: all_site_props.longitude})\n    }\n\n    render() {\n        const position = [this.state.latitude, this.state.longitude]\n        const zoom = 17\n        return (\n            <div>\n                <h1>{this.state.name}</h1>\n                <h2>{this.state.city}</h2>\n                <h3>{this.state.country}</h3>\n                <h4>{this.state.address}</h4>\n                <p>{this.state.fullInfo}</p>\n                <img src={this.state.imageUrl} />\n                <a href={this.state.externalSourceUrl} style={{marginDown: '100px'}}>Source</a>\n                <div style={{height: '400px', width: '60%'}} >\n                    <Map style={{height: '400px', width: '60%'}}\n                        center={position} zoom={zoom} >\n                        <TileLayer\n                        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                        />\n                        { \n                            this.state.haveUsersLocation ? \n                            <Marker position={position} icon={myIcon}>\n                                <Popup>\n                                    A pretty CSS3 popup. <br /> Easily customizable.\n                                </Popup>\n                            </Marker> : ''\n                        }\n                        <Marker position={position} icon={myIcon} />\n                    </Map>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SitePage","import React, { Component } from 'react'\nimport SiteComponent from '../sites/siteComponent'\nimport {getSiteByID,createNewRoad}  from '../firebase/FirebaseUtilities'\nimport { PaginatedList } from 'react-paginated-list';\nimport SiteSearch from '../search/SiteSearch'\n\n// const options = [\n//     { value: 'tags', label: 'Tags'},\n//     { value: 'country', label: 'Country'},\n//     { value: 'city', label: 'City'},\n//     { value: 'name', label: 'Name'}\n// ]\n\nclass RoadForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userid: \"\",\n            claim: \"guest\",\n            searchVal: props.match.params.searchVal ? props.match.params.searchVal : '',\n            topDownValue: 'tags',\n            siteListResult: [],\n            siteList:[],\n            name: '',\n            description: '',\n        }\n\n        this.updateSearchValue = this.updateSearchValue.bind(this);\n        this.updateTopDownhValue = this.updateTopDownhValue.bind(this);\n        this.createNewRoadSubmit = this.createNewRoadSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    };\n\n\n    updateSearchValue(e) {\n      this.setState({searchVal: e.target.value})\n    }\n\n    updateTopDownhValue(e) {\n      this.setState({topDownValue: e.value})\n    }\n    \n    renderButton = (sid) => {\n        const { siteList } = this.state;\n        const site = siteList.find((s)=> s.id === sid );\n        return !site;\n    }\n\n\n    async createNewRoadSubmit(e){\n        e.preventDefault()\n        if(!this.state.siteList.length){\n            alert(\"no sites where selected\")\n            return\n        }\n        let searchTokens = [];\n        const roadName = this.state.name;\n        const roadDescription = this.state.description;\n        const CityList = Array.from(new Set(this.state.siteList.map((site) => site.city)))\n        const CountryList = Array.from(new Set(this.state.siteList.map((site) => site.country)))\n        var TagList = []\n        let temp = Array.from(new Set(this.state.siteList.map((site) => site.tags)))\n        temp.forEach((tagsArr) => tagsArr.forEach((tag) => TagList.push(tag)));\n        searchTokens = Array.from(new Set([...TagList,...CityList,...CountryList,...roadName.split(\" \")]))\n\n        let siteListID = []\n        this.state.siteList.forEach((site) => siteListID.push(site.id));\n        \n        const road = {siteListID,roadName,roadDescription,CityList,CountryList,TagList,searchTokens}\n        \n        await createNewRoad(road);\n        console.log(\"created new road\")\n    }\n    addSiteToRoadList = async(e, siteID) => {\n        const siteData = await getSiteByID(siteID)\n        const siteObject = {\n            ...siteData,\n            id:siteID\n            \n        }\n        var siteList = this.state.siteList\n        siteList.push(siteObject)\n        this.setState({\n            siteList\n        });\n        // console.log(siteList)\n    }\n    removeSite(index){\n        var siteList = [...this.state.siteList]\n        siteList.splice(index,1);\n        this.setState({siteList});\n        // console.log(index)\n        // this.setState({ siteList: this.state.siteList.splice(index, 1)});\n    }\n\n    handleChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n      }\n\n    render() {\n        const { siteList } = this.state;\n\n        const mapping = (list) => list.map((site, i) => {\n            return (\n                <div key={i} >\n                    <li>\n                        <SiteComponent props={site}/>\n                    </li>\n                    <button onClick={() => this.removeSite(i)}>remove Site </button>\n                </div>)\n        });\n\n        return (\n            <div className=\"col-md\">\n                <form>\n                    <div className=\"input-field\">\n                        <input required name=\"name\" type=\"text\" id='name' onChange={this.handleChange} />\n                        <label htmlFor=\"name\">  Road  Name</label>\n                    </div>\n                    <div className=\"for-group\">\n                         <label >Road Description</label>\n                        <textarea required value={this.description} onChange={this.handleChange} type=\"description\" className=\"form-control\" name=\"description\" placeholder=\"Road Description\" />\n                    </div>\n                    <button type=\"submit\" onClick={(e) =>this.createNewRoadSubmit(e)} className=\"btn pink lighten-1\">Submit</button>\n                 </form>\n                <ul className=\"container\">\n                    {siteList.length > 0 && <PaginatedList\n                            list={siteList}\n                            itemsPerPage={3}\n                            renderList={mapping}/>}\n                    {/* {this.state.siteList.map((site, i) => {\n                        return (\n                            <div key={i} >\n                            <li>\n                                <SiteComponent props={site}/>\n                            </li>\n                            <button onClick={() => this.removeSite(i)}>remove Site </button>\n                            </div>)})} */}\n                </ul>\n                <SiteSearch\n                    onClickMethod={this.addSiteToRoadList}\n                    buttonName={`Add to road`}\n                    canRenderButton={this.renderButton}\n                    searchVal={this.state.searchVal}\n                    returnTo='roadForm'/>\n            </div>\n        );\n\n    //     return (\n            \n            \n\n\n\n                // <form ref={this.form} id=\"search-form\">\n                //     <div className=\"search-field\">\n                //         <input ref={this.searchVal} onChange={this.updateSearchValue} type=\"text\" required />\n                //     </div>\n                //     <Select ref={this.dropList} onChange={this.updateTopDownhValue} options = {options} />\n                //     <div>\n                //         <button onClick={this.onSearchButtonClicked}>Search</button>\n                //     </div>\n                //     <p className=\"error pink-text center-align\"></p>\n                // </form>\n                \n                // <div className=\"container\">\n                //     {this.state.siteListResult.map((site, i) => {\n                //         if(this.renderButton(site.id)) {\n                //             return  <div key={i} >\n                //                         <SiteComponent props={site}/>\n                //                         <button onClick={() => this.addSiteToRoadList(site.id)}>Add to Road</button>\n                //                     </div>\n                //         }\n                //         return <SiteComponent key={i} props={site}/>\n                //     //if site-id is not in favoritesList show button to add to favorites\n                //   })}\n                // </div>\n    //         </div>\n    //     )    \n    }\n}\n\nexport default RoadForm","import React, { Component } from 'react'\n//import firebase from '../firebase'\nimport {UpdateSite} from '../firebase/FirebaseUtilities'\nimport { Link } from 'react-router-dom'\nimport {getSiteByID} from '../firebase/FirebaseUtilities'\n\nclass UpdateForm extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        id: props.match.params.id,\n        isLoaded:false\n      }\n      this.handleSubmit = this.handleSubmit.bind(this);\n    };\n\n  async componentDidMount(){\n    const id = this.state.id\n    let site = await getSiteByID(id);\n  \n    this.setState({\n      ...site,\n       id,\n       isLoaded:true})\n  }  \n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleChangeTokens(e,index){\n    var tags  = this.state.tags\n    tags[index] = e.target.value;\n    this.setState({\n      tags: tags\n    })\n  }\n  addToken = (e) => {\n    this.setState({\n      tags:[...this.state.tags,\"\"]\n    })\n  }\n\n  async handleSubmit(e){  \n    e.preventDefault();\n    const searchTokens = Array.from(new Set([...this.state.tags,this.state.city,this.state.city,...this.state.name.split(\" \")]))\n    var site = {\n      id: this.state.id,\n      name: this.state.name,\n      city: this.state.city,\n      country: this.state.country,\n      tags: this.state.tags,\n      adress: this.state.adress,\n      externalSourceUrl: this.state.externalSourceUrl,\n      imageUrl: this.state.imageUrl,\n      fullInfo: this.state.fullInfo,\n      partialInfo: this.state.partialInfo,\n      latitude: parseFloat(this.state.latitude),\n      longitude: parseFloat(this.state.longitude),\n      searchTokens:searchTokens,\n    }\n    \n    await UpdateSite(site)\n    alert(site.name + \" has updated!\");\n    this.props.history.push('/adminPage')\n  }\n\n  deleteTag = (e,index) =>{\n    var tags = [...this.state.tags]\n    tags.splice(index,1)\n    this.setState({tags: tags});\n  }\n\n\n  render() {\n    if(!this.state.isLoaded){\n      return <span>Loading...</span>\n    }\n    return (\n      <div className=\"container\">\n          <h5 className=\"grey-text text-darken-3\">Update a Site</h5>\n        <form onSubmit={(e)=> this.handleSubmit(e)} id=\"create-site-form\">\n          <div className=\"input-field\">\n            <input type=\"text\" id='name' onChange={this.handleChange}  value = {this.state.name} required></input>\n            <label htmlFor=\"name\">  Site Name</label>\n          </div>\n          <div className=\"input-field\">\n            <textarea id=\"city\" className=\"materialize-textarea\" onChange={this.handleChange} value = {this.state.city} required></textarea>\n            <label htmlFor=\"city\">  City Name</label>\n          </div>\n          <div className=\"input-field\">\n            <textarea id=\"country\" className=\"materialize-textarea\" onChange={this.handleChange} value = {this.state.country} required></textarea>\n            <label htmlFor=\"country\">  Country Name</label>\n          </div>\n          <div className=\"input-field\">\n            <textarea id=\"adress\" className=\"materialize-textarea\" onChange={this.handleChange} value = {this.state.adress} required></textarea>\n            <label htmlFor=\"adress\">  Adress</label>\n          </div>\n          <div className=\"input-field\">\n            <textarea id=\"externalSourceUrl\" className=\"materialize-textarea\" onChange={this.handleChange} value = {this.state.externalSourceUrl} required></textarea>\n            <label htmlFor=\"externalSourceUrl\">  External Source Url</label>\n          </div>\n          <div className=\"input-field\">\n            <textarea id=\"imageUrl\" className=\"materialize-textarea\" onChange={this.handleChange} value = {this.state.imageUrl} required></textarea>\n            <label htmlFor=\"imageUrl\">  Image Url Link</label>\n          </div>\n          <div className=\"input-field\">\n            <textarea id=\"fullInfo\" className=\"materialize-textarea\" onChange={this.handleChange} value = {this.state.fullInfo} required></textarea>\n            <label htmlFor=\"fullInfo\"> Enter Descpirtion</label>\n          </div>\n          <div className=\"input-field\">\n            <textarea id=\"partialInfo\" className=\"materialize-textarea\" onChange={this.handleChange} value = {this.state.partialInfo} required></textarea>\n            <label htmlFor=\"partialInfo\">  Enter marker Descpirtion</label>\n          </div>\n          <div className=\"input-field\">\n            <textarea id=\"latitude\" className=\"materialize-textarea\" onChange={this.handleChange} value = {this.state.latitude} required></textarea>\n            <label htmlFor=\"latitude\"> Enter latitude</label>\n          </div>\n          <div className=\"input-field\">\n            <textarea id=\"longitude\" className=\"materialize-textarea\" onChange={this.handleChange} value = {this.state.longitude} required></textarea>\n            <label htmlFor=\"longitude\"> Enter longitude</label>\n          </div>\n          \n          <label>Tags</label>\n          {\n            this.state.tags.map((token,index) => {\n              return (\n                <div key={index}>\n                  <textarea  onChange={(e) => this.handleChangeTokens(e,index)} value={token}  /> \n                  <button type=\"button\" onClick={(e) => this.deleteTag(index)}> Delete Tag</button>\n                </div>\n              )\n            })\n          }\n\n          <hr/>\n          <button type=\"button\" id=\"token\" onClick={this.addToken}>Add Tag</button>\n          <hr/>\n          <div className=\"input-field\">\n            <button type=\"submit\" className=\"btn pink lighten-1\" color=\"red\">Update Site</button>\n            <button  type=\"button\" className=\"btn pink lighten-1\" style={{marginLeft:\"30px\"}}><Link className=\"white-text\" to=\"/adminPage\">Return to Admin Menu</Link></button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default UpdateForm","import React, { Component } from 'react'\nimport {findFromDB} from './SearchUtils'\nimport RoadComponent from '../road/RoadComponent'\nimport { PaginatedList } from 'react-paginated-list'\n\n\nclass RoadSearch extends Component {\n\n    constructor(props) {\n        super(props);\n\n        const { buttonName, onClickMethod, canRenderButton, searchVal, returnTo } = props;\n        this.state = {\n            searchVal: searchVal ? searchVal.split(' ') : [],\n            siteList: [],\n            favoriteList: [],\n            // Button content next to each entry\n            buttonName,\n            returnTo: returnTo\n        }\n        // onClick event handler for an entry button.\n        this.onClickMethod = onClickMethod ? onClickMethod.bind(this) : null;\n        // Boolean function for conditional button rendering.\n        this.canRenderButton = canRenderButton ? canRenderButton.bind(this) : null;\n        this.onSearchButtonClicked = this.onSearchButtonClicked.bind(this);\n        this.updateSearchValue = this.updateSearchValue.bind(this);\n\n        console.log(this.state.searchVal)\n\n        if(this.state.searchVal.length >= 1) {\n            this.executeSearch()\n        }\n    };\n\n    onSearchButtonClicked(e) {\n        e.preventDefault();\n        window.location.href = '/' + this.state.returnTo + '/' + this.state.searchVal\n\n    }\n    // search for roads\n    async executeSearch() {\n        console.log(\"searching road\")\n        const result = await findFromDB(this.state.searchVal,['roads'])\n        this.setState({siteList: result})\n    }\n\n    updateSearchValue(e) {\n        this.setState({searchVal: e.target.value})\n    }\n\n    render() {\n        const { buttonName, siteList } = this.state;\n        // console.log(siteList);\n        const mapping = (list) => list.map((road, i) => {\n            return  <div key={i} >\n                        <RoadComponent key={i} props={road}/>\n                        {this.onClickMethod && buttonName && this.canRenderButton(road.id) && \n                            <button onClick={(e) => this.onClickMethod(e, road.id)}>{buttonName}</button>}\n                    </div>\n        });\n        //if site-id is not in favoritesList show button to add to favorites\n      \n\n        return (\n            <div>\n                {/* Search site form */}\n                <form ref={this.form} id=\"search-form\">\n                    <div className=\"search-field\">\n                        <input ref={this.searchVal} onChange={this.updateSearchValue} type=\"text\" required />\n                    </div>\n                    <div>\n                        <button onClick={this.onSearchButtonClicked}>Search</button>\n                    </div>\n                    <p className=\"error pink-text center-align\"></p>\n                </form>\n                \n                {/* Results */}\n                <div className=\"container\">\n                    {siteList.length !== 0 && <PaginatedList\n                        list={siteList}\n                        itemsPerPage={3}\n                        renderList={mapping}/>}\n                </div>\n            </div>\n        )    \n    }\n}\n\nexport default RoadSearch","import React, { Component } from 'react'\r\nimport {myFirebase} from '../firebase/firebase'\r\nimport {getUserClaims, updateUserRoadsFavorites, getFavoritesIDs} from '../firebase/FirebaseUtilities'\r\nimport RoadSearch from './RoadSearch'\r\n\r\n\r\nclass RoadMenu extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            userid: \"\",\r\n            claim: \"guest\",\r\n            favoriteList: [],\r\n            searchVal: props.match.params.searchVal ? props.match.params.searchVal : ''\r\n        }\r\n        console.log(this.state.searchVal)\r\n        this.canRenderButton = this.canRenderButton.bind(this);\r\n        this.addRoadsToFavorites = this.addRoadsToFavorites.bind(this);\r\n    }\r\n\r\n    canRenderButton = (sid) => {\r\n        if(this.state.claim !== \"guest\") {\r\n            console.log(`user is not a guest`);\r\n            if(!this.state.favoriteList.includes(sid)) {\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n    addRoadsToFavorites = async(e, sid) => {\r\n        var favorites = this.state.favoriteList\r\n        favorites.push(sid)\r\n        updateUserRoadsFavorites(this.state.userid, favorites)\r\n        \r\n        this.setState({favoriteList: favorites})\r\n    }\r\n\r\n    async componentDidMount(){\r\n        myFirebase.auth().onAuthStateChanged(async (user) => {\r\n            if(user) {\r\n                var siteList = await getFavoritesIDs(user.uid)\r\n                this.setState({userid: user.uid, claim: await getUserClaims(user), favoriteList: siteList});\r\n            }\r\n            //get favorites from user and save to this.state.favoriteList\r\n       })\r\n    }\r\n    render() {\r\n      \r\n        return (\r\n            <RoadSearch\r\n                onClickMethod={this.addRoadsToFavorites}\r\n                buttonName={`Add to favorites`}\r\n                canRenderButton={this.canRenderButton}\r\n                searchVal={this.state.searchVal}\r\n                returnTo='searchRoad'/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RoadMenu","import React, { Component } from \"react\";\r\nimport { getRoadByID } from '../search/SearchUtils'\r\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet'\r\nimport { myIcon } from '../map/MapUtilities'\r\nimport { getSiteByID } from \"../firebase/FirebaseUtilities\";\r\nimport { PaginatedList } from 'react-paginated-list';\r\nimport SiteComponent from '../sites/siteComponent'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass RaodPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            site_id: props.match.params.id,\r\n            roadName: \"\",\r\n            CityList: [],\r\n            CountryList: [],\r\n            description: \"\",\r\n            siteList:[],\r\n            haveUsersLocation: false,\r\n            markers: []\r\n        }\r\n    };\r\n\r\n    async componentWillMount() {\r\n        const roadId = this.state.site_id;\r\n        var all_site_props = await getRoadByID(roadId)\r\n        console.log(all_site_props)\r\n        const siteListID = all_site_props.siteList;\r\n        const siteList = await Promise.all(siteListID.map((async (sid) => ({ id:sid, ...(await getSiteByID(sid))}))))\r\n        this.setState({\r\n                        ...all_site_props,\r\n                        siteList\r\n\r\n         })\r\n    }\r\n\r\n    render() {\r\n        const { siteList } = this.state;\r\n        if(!siteList.length){\r\n            return <span>Loading...</span>\r\n        }\r\n        const position = [siteList[0].latitude, siteList[0].longitude]\r\n        console.log(position)\r\n        const zoom = 10\r\n        console.log(this.state)\r\n       \r\n        const mapping = (list) => list.map((site, i) => {\r\n            return (\r\n                <div key={i} >\r\n                    <li>\r\n                        <SiteComponent props={site}/>\r\n                    </li>\r\n                </div>)\r\n        });\r\n        return (\r\n            <div>\r\n                <h1>{this.state.name}</h1>\r\n                <h2>{this.state.city.join(\", \")}.</h2>\r\n                <h3>{this.state.country.join(\", \")}</h3>\r\n                <p>{this.state.description}</p>\r\n                <ul className=\"container\">\r\n                    {siteList.length > 0 && <PaginatedList\r\n                            list={siteList}\r\n                            itemsPerPage={3}\r\n                            renderList={mapping}/>}\r\n                </ul>\r\n\r\n                <div style={{height: '400px', width: '60%'}} >\r\n                    <Map style={{height: '400px', width: '60%', marginLeft:\"450px\"}}\r\n                        center={position} zoom={zoom} >\r\n                        <TileLayer\r\n                        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                        />\r\n                        { \r\n                            this.state.haveUsersLocation ? \r\n                            <Marker position={position} icon={myIcon}>\r\n                                <Popup>\r\n                                    A pretty CSS3 popup. <br /> Easily customizable.\r\n                                </Popup>\r\n                            </Marker> : ''\r\n                        }\r\n                        <Marker position={position} icon={myIcon} />\r\n                        {\r\n                            this.state.siteList.map((site, i) => (\r\n                                <Marker key={i} position={[site.latitude, site.longitude]} icon={myIcon}>\r\n                                    <Popup>\r\n                                        {site.address}<br/>\r\n                                        {site.partialInfo}<br/>\r\n                                        <Link to={'/site/'+site.id}>More info</Link>\r\n                                    </Popup>\r\n                                </Marker>\r\n                            )\r\n                        )}\r\n                    </Map>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RaodPage","import React, { Component } from 'react'\r\nimport {deleteRoadFromDB} from '../firebase/FirebaseUtilities'\r\nimport RoadSearch from '../search/RoadSearch'\r\n\r\n\r\nclass DeleteRoad extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.myRef = React.createRef();\r\n    this.state = {\r\n        searchVal: props.match.params.searchVal ? props.match.params.searchVal : '',\r\n        topDownValue: 'tags',\r\n    }\r\n    this.updateSearchValue = this.updateSearchValue.bind(this);\r\n    this.updateTopDownhValue = this.updateTopDownhValue.bind(this);\r\n};\r\n\r\nDeleteRoad = async(e, sid) => {\r\n  const roadList = this.myRef.current.state.roadList;\r\n  e.preventDefault();\r\n  console.log(roadList);\r\n  const road = roadList.find((s)=> s.id === sid );\r\n  const index = roadList.indexOf(road);\r\n  await deleteRoadFromDB(road)\r\n  console.log(\"road\" + road.name + \"had deleted\")\r\n  \r\n  roadList.splice(index,1)\r\n  this.setState({roadList});\r\n}\r\n\r\nupdateSearchValue(e) {\r\n  this.setState({searchVal: e.target.value})\r\n}\r\n\r\nupdateTopDownhValue(e) {\r\n  this.setState({topDownValue: e.value})\r\n}\r\n\r\nrender() {\r\n    return (\r\n        <div>\r\n            <h5 className=\"grey-text text-darken-3\">Search Road to Delete</h5>            \r\n            <RoadSearch ref={this.myRef}\r\n              roadList={this.state.roadList}\r\n              onClickMethod={this.DeleteRoad} \r\n              buttonName={`Delete road`}\r\n              canRenderButton={() => true}\r\n              searchVal={this.state.searchVal}\r\n              returnTo='deleteRoad'/>\r\n\r\n        </div>\r\n    )    \r\n  }\r\n}\r\n\r\nexport default DeleteRoad","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route, Redirect} from 'react-router-dom'\n\nimport Menu from './components/main-menu/Menu'\nimport AdminMenu from './components/admin/AdminMenu'\nimport LoginPage from './components/login/LoginPage'\nimport SignUp from './components/login/SignUp'\nimport UpdateSite from './components/admin/UpdateSite';\nimport CreateSite from './components/admin/CreateSite';\nimport DeleteSite from './components/admin/DeleteSite';\nimport AdminPage from './components/admin/AdminPage';\nimport AuthMenu from './components/admin/AuthMenu';\nimport SearchMenu from './components/search/SearchMenu';\nimport About from './components/main-menu/about';\nimport Navbar from './components/layout/Navbar'\nimport Home from './components/login/Home';\nimport LogOut from './components/login/LogOut';\nimport {myFirebase} from './components/firebase/firebase';\nimport Favorites from './components/favorites/Favorites';\nimport SitePage from './components/sites/SitePage'\nimport RoadForm from './components/road/RoadForm';\nimport UpdateForm from './components/sites/UpdateForm'\nimport RoadMenu from './components/search/RoadMenu';\nimport RaodPage from './components/road/roadPage';\nimport DeleteRoad from './components/road/DeleteRoad';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = ({\n      user: null,\n    });\n    this.authListener = this.authListener.bind(this);\n  }\n\n  componentDidMount() {\n    this.authListener();\n  }\n\n  authListener() {\n    myFirebase.auth().onAuthStateChanged((user) => {\n      console.log(user);\n      if (user) {\n        this.setState({ user });\n        localStorage.setItem('user', user.uid);\n      } else {\n        this.setState({ user: null });\n        localStorage.removeItem('user');\n      }\n    });\n  }\n\n  render() {\n    // const user = {\n    //   claims:\"admin\" \n    // }\n    return (\n      <BrowserRouter forceRefresh={true}>\n        <div className=\"App\">\n        <Navbar />\n          <header className=\"App-header\">\n            <script src=\"https://www.gstatic.com/firebasejs/7.6.1/firebase-app.js\"></script>\n            <script src=\"https://www.gstatic.com/firebasejs/7.6.1/firebase-firestore.js\"></script>\n            <script src=\"https://www.gstatic.com/firebasejs/7.6.1/firebase-auth.js\"></script>\n            <script src=\"https://cdn.firebase.com/libs/firebaseui/4.0.0/firebaseui.js\"></script>\n            <link rel=\"manifest\" href=\"/manifest.json\"></link>\n            <link rel=\"stylesheet\" href=\"styles.css\"></link>\n          </header>\n          <Switch>\n            <Route exact path='/' >\n              <Redirect to='/LoginPage'/>\n            </Route>\n            {/* <Route exact path='/' component={LoginPage}/> */}\n            <Route path='/Menu'  component={Menu} />\n            <Route path='/LoginPage' component={LoginPage} />\n            <Route path='/LogOut' component={LogOut} />\n            <Route path='/SignUp' component={SignUp} />\n            <Route path='/adminPage' component={AdminMenu} />\n            <Route path='/createSite' component={CreateSite} />\n            <Route exact path='/deleteSite' component={DeleteSite} />\n            <Route exact path='/deleteSite/:searchVal' component={DeleteSite} />\n            <Route exact path='/updateSite' component={UpdateSite} />\n            <Route exact path='/updateSite/:searchVal' component={UpdateSite} />\n            <Route exact path='/updateForm/:id' component={UpdateForm} />\n            <Route path='/auth' component={AuthMenu} />\n            <Route exact path='/search' component={SearchMenu} />\n            <Route exact path='/search/:searchVal' component={SearchMenu} />\n            <Route path='/favorites' component={Favorites} />\n            <Route path='/about' component={About} />\n            <Route exact path='/site/:id' component={SitePage} />\n            <Route exact path='/RoadForm' component={RoadForm} />\n            <Route exact path='/RoadForm/:searchVal' component={RoadForm} />\n            <Route exact path='/admin' component={AdminPage} />\n            <Route exact path='/searchRoad' component={RoadMenu} />\n            <Route exact path='/searchRoad/:searchVal' component={RoadMenu} />\n            <Route exact path='/road/:id' component={RaodPage} />\n            <Route exact path='/deleteRoad' component={DeleteRoad} />\n            <Route exact path='/deleteRoad/:searchVal' component={DeleteRoad} />\n            \n            \n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export default function register() {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Lets check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not local host. Just register service worker\r\n          registerValidSW(swUrl);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the old content will have been purged and\r\n                // the fresh content will have been added to the cache.\r\n                // It's the perfect time to display a \"New content is\r\n                // available; please refresh.\" message in your web app.\r\n                console.log('New content is available; please refresh.');\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        if (\r\n          response.status === 404 ||\r\n          response.headers.get('content-type').indexOf('javascript') === -1\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport * as serviceWorker from './serviceWorker';\nimport 'leaflet/dist/leaflet.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\n// Ask Ori about it \n\n"],"sourceRoot":""}